[2015-01-25 08:23:16,291][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,323][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4473", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,340][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,365][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4474", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,381][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,410][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4475", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,427][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,452][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4476", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,469][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,498][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4477", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,514][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,540][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4478", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,556][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,581][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4479", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,600][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,636][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4480", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,652][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,691][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4481", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,708][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,736][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4482", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,754][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,783][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4483", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,800][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,825][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4484", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,841][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,870][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4485", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,889][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,916][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4486", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,934][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:16,970][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4487", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:16,989][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,024][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4488", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,041][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,067][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4489", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,084][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,111][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4490", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,129][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,163][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4491", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,181][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,209][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4492", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,227][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,258][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4493", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,276][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,303][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4494", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,321][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,354][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4495", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,373][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,401][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4496", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,418][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,443][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4497", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,460][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,491][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4498", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,509][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,535][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4499", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,551][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,577][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4500", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,594][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,623][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4501", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,641][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,672][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4502", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,690][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,716][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4503", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,735][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,760][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4504", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,778][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,809][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4505", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,827][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,854][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4506", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,872][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,901][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4507", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,919][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,946][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4508", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:17,964][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:17,994][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4509", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,012][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,038][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4510", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,058][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,088][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4511", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,106][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,131][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4512", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,152][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,182][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4513", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,200][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,231][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4514", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,248][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,290][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4515", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,309][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,336][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4516", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,353][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,383][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4517", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,401][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,428][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4518", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,444][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,475][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4519", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,492][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,523][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4520", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,543][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,571][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4521", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,589][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,620][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4522", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,638][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,667][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4523", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,686][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,714][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4524", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,731][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,762][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4525", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,779][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,809][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4526", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,827][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,854][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4527", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,871][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,899][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4528", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,918][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,949][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4529", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:18,967][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:18,997][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4530", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,013][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,045][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4531", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,062][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,100][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4532", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,117][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,148][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4533", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,164][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,193][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4534", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,210][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,240][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4535", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,257][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,282][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4536", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,299][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,327][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4537", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,344][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,369][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4538", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,385][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,413][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4539", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,429][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,454][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4540", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,470][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,499][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4541", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,515][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,540][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4542", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,557][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,588][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4543", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,605][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,631][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4544", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,649][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,681][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4545", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,698][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,724][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4546", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,741][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,772][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4547", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,789][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,817][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4548", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,834][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,863][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4549", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,880][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,906][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4550", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,923][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,952][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4551", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:19,969][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:19,995][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4552", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,011][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,043][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4553", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,060][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,085][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4554", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,102][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,133][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4555", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,150][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,182][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4556", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,199][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,225][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4557", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,242][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,271][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4558", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,288][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,313][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4559", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,331][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,361][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4560", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,380][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,407][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4561", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,427][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,452][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4562", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,469][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,500][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4563", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,518][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,544][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4564", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,562][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,591][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4565", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,609][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,634][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4566", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,651][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,681][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4567", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,698][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,723][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4568", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,740][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,772][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4569", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,790][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,817][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4570", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,835][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,865][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4571", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,883][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,910][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4572", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,928][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:20,958][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4573", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:20,976][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,002][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4574", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,019][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,046][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4575", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,064][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,092][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4576", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,109][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,139][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4577", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,156][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,183][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4578", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,201][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,231][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4579", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,248][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,275][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4580", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,292][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,319][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4581", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,337][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,365][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4582", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,383][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,414][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4583", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,432][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,459][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4584", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,476][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,506][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4585", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,524][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,553][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4586", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,570][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,596][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4587", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,614][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,639][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4588", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,655][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,685][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4589", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,701][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,733][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4590", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,749][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,784][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4591", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,802][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,833][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4592", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,851][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,883][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4593", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,901][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,933][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4594", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,951][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:21,979][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4595", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:21,997][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,028][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4596", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,046][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,073][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4597", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,091][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,123][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4598", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,140][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,167][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4599", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,184][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,215][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4600", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,233][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,259][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4601", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,277][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,306][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4602", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,323][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,349][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4603", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,366][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,398][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4604", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,416][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,443][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4605", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,461][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,491][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4606", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,509][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,539][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4607", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,556][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,582][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4608", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,600][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,627][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4609", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,645][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,676][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4610", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,694][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,726][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4611", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,744][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,774][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4612", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,793][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,824][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4613", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,842][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,868][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4614", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,886][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,917][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4615", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,934][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:22,960][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4616", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:22,978][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,008][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4617", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,026][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,053][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4618", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,071][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,100][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4619", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,116][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,141][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4620", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,157][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,187][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4621", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,205][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,231][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4622", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,250][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,280][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4623", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,297][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,323][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4624", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,344][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,370][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4625", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,388][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,417][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4626", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,442][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,469][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4627", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,487][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,515][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4628", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,534][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,564][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4629", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,582][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,607][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4630", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,623][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,657][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4631", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,674][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,704][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4632", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,721][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,746][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4633", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,764][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,794][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4634", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,810][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,835][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4635", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,851][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,880][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4636", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,896][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,922][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4637", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,938][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:23,967][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4638", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:23,985][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,012][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4639", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,031][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,059][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4640", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,078][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,105][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4641", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,124][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,151][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4642", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,170][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,201][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4643", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,219][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,246][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4644", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,265][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,295][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4645", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,313][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,343][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4646", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,362][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,388][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4647", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,406][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,438][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4648", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,455][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,484][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4649", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,502][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,530][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4650", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,547][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,580][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4651", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,599][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,626][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4652", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,643][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,668][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4653", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,685][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,710][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4654", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,727][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,753][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4655", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,769][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,800][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4656", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,817][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,843][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4657", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,860][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,889][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4658", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,906][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,931][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4659", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,948][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:24,977][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4660", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:24,994][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,019][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4661", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,035][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,064][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4662", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,081][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,108][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4663", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,124][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,157][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4664", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,173][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,206][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4665", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,223][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,252][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4666", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,269][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,294][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4667", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,310][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,340][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4668", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,356][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,381][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4669", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,398][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,424][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4670", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,440][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,470][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4671", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,488][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,515][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4672", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,533][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,563][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4673", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,581][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,607][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4674", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,627][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,659][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4675", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,677][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,705][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4676", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,722][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,748][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4677", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,767][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,797][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4678", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,815][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,841][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4679", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,858][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,888][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4680", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,905][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,930][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4681", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:25,947][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:25,979][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4682", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,001][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,029][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4683", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,045][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,075][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4684", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,093][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,118][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4685", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,135][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,160][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4686", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,177][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,207][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4687", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,226][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,255][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4688", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,273][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,303][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4689", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,322][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,348][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4690", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,366][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,396][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4691", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,413][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,440][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4692", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,458][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,489][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4693", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,506][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,533][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4694", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,551][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,581][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4695", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,598][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,624][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4696", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,642][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,672][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4697", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,690][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,718][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4698", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,736][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,767][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4699", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,785][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,812][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4700", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,830][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,861][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4701", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,879][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,905][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4702", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,924][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,953][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4703", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:26,971][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:26,998][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4704", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,015][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,041][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4705", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,060][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,086][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4706", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,105][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,135][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4707", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,153][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,181][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4708", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,198][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,228][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4709", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,247][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,274][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4710", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,291][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,318][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4711", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,337][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,364][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4712", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,382][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,415][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4713", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,433][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,463][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4714", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,482][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,513][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4715", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,531][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,557][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4716", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,575][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,601][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4717", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,619][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,649][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4718", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,667][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,692][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4719", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,709][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,738][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4720", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,756][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,781][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4721", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,798][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,823][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4722", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,840][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,865][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4723", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,882][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,907][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4724", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,924][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,949][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4725", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:27,967][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:27,993][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4726", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,010][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,035][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4727", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,054][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,083][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4728", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,099][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,124][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4729", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,141][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,169][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4730", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,185][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,210][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4731", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,226][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,251][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4732", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,267][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,296][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4733", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,313][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,346][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4734", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,363][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,390][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4735", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,408][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,435][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4736", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,452][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,479][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4737", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,497][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,523][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4738", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,540][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,566][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4739", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,583][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,613][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4740", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,631][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,657][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4741", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,676][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,706][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4742", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,725][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,751][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4743", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,772][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,802][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4744", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,820][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,846][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4745", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,864][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,894][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4746", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,912][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,938][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4747", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,954][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:28,980][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4748", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:28,999][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:29,025][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4749", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:29,046][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:29,072][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4750", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:29,090][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:29,121][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4751", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:29,139][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:29,166][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4752", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:29,184][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:29,214][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4753", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:29,232][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:29,260][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4754", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:29,278][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:23:29,306][2845 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser4755", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 08:23:29,328][2845 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 08:40:26,663][3007 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-01-25 08:40:27,348][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className Echo is registering
[2015-01-25 08:40:27,585][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className Track is registering
[2015-01-25 08:40:27,586][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className ResetTracker is registering
[2015-01-25 08:40:27,586][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className RenameTracker is registering
[2015-01-25 08:40:27,587][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className AnnotateTracker is registering
[2015-01-25 08:40:27,587][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className Aggregate is registering
[2015-01-25 08:40:27,587][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className ResetAggregator is registering
[2015-01-25 08:40:27,588][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className RenameAggregator is registering
[2015-01-25 08:40:27,588][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className Measure is registering
[2015-01-25 08:40:27,589][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className ResetMeasurer is registering
[2015-01-25 08:40:27,589][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className RenameMeasurer is registering
[2015-01-25 08:40:27,590][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className AddUser is registering
[2015-01-25 08:40:27,590][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className DeleteUser is registering
[2015-01-25 08:40:27,590][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className UpdateUser is registering
[2015-01-25 08:40:27,591][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className RebalanceUsers is registering
[2015-01-25 08:40:27,591][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className RegisterWorker is registering
[2015-01-25 08:40:27,591][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className UpdateWorker is registering
[2015-01-25 08:40:27,592][3007 ][monk.network.server][DEBUG   ][34  ][server.py] : className UnregisterWorker is registering
[2015-01-25 19:39:04,273][9351 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-01-25 19:39:18,914][9351 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-01-25 19:39:19,091][9351 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-01-25 19:39:24,141][9351 ][monk.crane  ][INFO    ][48  ][crane.py] : initializing EntityStore 
[2015-01-25 19:39:24,143][9351 ][monk.crane  ][INFO    ][48  ][crane.py] : initializing UserStore 
[2015-01-25 19:39:24,144][9351 ][monk.crane  ][INFO    ][48  ][crane.py] : initializing EngineStore 
[2015-01-25 19:39:24,145][9351 ][monk.crane  ][INFO    ][48  ][crane.py] : initializing PandaStore 
[2015-01-25 19:39:24,147][9351 ][monk.crane  ][INFO    ][48  ][crane.py] : initializing MantisStore 
[2015-01-25 19:39:24,148][9351 ][monk.crane  ][INFO    ][48  ][crane.py] : initializing TurtleStore 
[2015-01-25 19:39:24,149][9351 ][monk.crane  ][INFO    ][48  ][crane.py] : initializing TigressStore 
[2015-01-25 19:39:30,948][9351 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 19:39:31,014][9351 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser1000", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 19:39:37,226][9351 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 19:39:37,268][9351 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser1000", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-01-25 19:39:40,532][9351 ][monk.network.partitioner][DEBUG   ][38  ][partitioner.py] : key monk
[2015-01-25 19:39:40,561][9351 ][monk.network.producer][INFO    ][66  ][producer.py] : sending message ('{"turtleName": "movielens-binary", "follower": "mluser1000", "name": "monk", "op": "AddClone"}',) at monkTestWorker@2
[2015-03-18 16:37:38,789][4003 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-18 16:37:38,789][4003 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-18 16:37:38,863][4003 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-18 16:37:38,864][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-18 16:37:38,935][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-18 16:37:38,975][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-18 16:37:39,008][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-18 16:37:39,009][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-18 16:37:39,010][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-18 16:37:39,010][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-18 16:38:04,145][4003 ][monk.api    ][INFO    ][48  ][api.py  ] : ------end-----------
[2015-03-18 16:38:28,091][4003 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-18 16:38:28,092][4003 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-18 16:38:28,141][4003 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-18 16:38:28,142][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-18 16:38:28,144][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-18 16:38:28,146][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-18 16:38:28,148][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-18 16:38:28,150][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-18 16:38:28,152][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-18 16:38:28,154][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-18 16:39:02,219][4003 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-18 16:39:13,588][4003 ][monk.api    ][INFO    ][48  ][api.py  ] : ------end-----------
[2015-03-18 16:39:15,988][4003 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-18 16:39:15,989][4003 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-18 16:39:16,177][4003 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-18 16:39:16,179][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-18 16:39:16,180][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-18 16:39:16,182][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-18 16:39:16,183][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-18 16:39:16,185][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-18 16:39:16,186][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-18 16:39:16,188][4003 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-18 16:39:32,545][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,545][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I love all those options for yogurt flavors and toppings.', u'review_count': u'275', u'title': u'Yogurtland', u'rating_string': u'4.5', u'category_str_list': [u'Ice Cream & Frozen Yogurt'], u'link': u'/biz/yogurtland-seattle', u'address': u'\n\t\t\t1620 BroadwaySeattle, WA 98122\n\t\t', u'desc': u'Yogurtland', u'_id': ObjectId('524c04c4e291973e1136496c'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6162747, u'lng': -122.3205492}, u'viewport': {u'northeast': {u'lat': 47.6176236802915, u'lng': -122.3192002197085}, u'southwest': {u'lat': 47.6149257197085, u'lng': -122.3218981802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1620', u'types': [u'street_number'], u'short_name': u'1620'}, {u'long_name': u'Broadway', u'types': [u'route'], u'short_name': u'Broadway'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'1620 Broadway, Seattle, WA 98122, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,546][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,546][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I LOVE LOVE LOVE the gnocchi with black truffle cream.', u'review_count': u'610', u'title': u'List', u'rating_string': u'4.5', u'category_str_list': [u'Italian', u'Tapas/Small Plates'], u'link': u'/biz/list-seattle', u'address': u'\n\t\t\t2226 1st AveSeattle, WA 98121\n\t\t', u'desc': u'List', u'_id': ObjectId('524c04c4e291973e1136496d'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6126467, u'lng': -122.3455715}, u'viewport': {u'northeast': {u'lat': 47.6139956802915, u'lng': -122.3442225197085}, u'southwest': {u'lat': 47.6112977197085, u'lng': -122.3469204802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2226', u'types': [u'street_number'], u'short_name': u'2226'}, {u'long_name': u'1st Avenue', u'types': [u'route'], u'short_name': u'1st Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2226 1st Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,547][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,547][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Make sure to check out the salmon at the fish ladder.', u'review_count': u'219', u'title': u'Hiram M. Chittenden Locks', u'rating_string': u'4.5', u'category_str_list': [u'Landmarks & Historical Buildings', u'Lakes'], u'link': u'/biz/hiram-m-chittenden-locks-seattle', u'address': u'\n\t\t\t3015 NW 54th StSeattle, WA 98107\n\t\t', u'desc': u'Hiram M. Chittenden Locks', u'_id': ObjectId('524c04c4e291973e1136496e'), u'price_range': 0, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6667052, u'lng': -122.3980679}, u'viewport': {u'northeast': {u'lat': 47.66805418029149, u'lng': -122.3967189197085}, u'southwest': {u'lat': 47.66535621970849, u'lng': -122.3994168802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'3015', u'types': [u'street_number'], u'short_name': u'3015'}, {u'long_name': u'Northwest 54th Street', u'types': [u'route'], u'short_name': u'NW 54th St'}, {u'long_name': u'Old Ballard', u'types': [u'neighborhood', u'political'], u'short_name': u'Old Ballard'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98107', u'types': [u'postal_code'], u'short_name': u'98107'}], u'formatted_address': u'3015 Northwest 54th Street, Seattle, WA 98107, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,547][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,548][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'with such a great assortment of unique purses and jewelry.', u'review_count': u'53', u'title': u'Laura Bee Designs', u'rating_string': u'5.0', u'category_str_list': [u'Jewelry', u'Accessories'], u'link': u'/biz/laura-bee-designs-seattle', u'address': u'\n\t\t\t6418 20th Ave NWSeattle, WA 98107\n\t\t', u'desc': u'Laura Bee Designs', u'_id': ObjectId('524c04c4e291973e1136496f'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6757615, u'lng': -122.381931}, u'viewport': {u'northeast': {u'lat': 47.6771104802915, u'lng': -122.3805820197085}, u'southwest': {u'lat': 47.6744125197085, u'lng': -122.3832799802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'6418', u'types': [u'street_number'], u'short_name': u'6418'}, {u'long_name': u'20th Avenue Northwest', u'types': [u'route'], u'short_name': u'20th Ave NW'}, {u'long_name': u'Old Ballard', u'types': [u'neighborhood', u'political'], u'short_name': u'Old Ballard'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98107', u'types': [u'postal_code'], u'short_name': u'98107'}], u'partial_match': True, u'formatted_address': u'6418 20th Avenue Northwest, Seattle, WA 98107, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,548][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,548][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'If you need a top notch guy hair cut, Martin is your guy.', u'review_count': u'101', u'title': u'Radar Hair & Records', u'rating_string': u'5.0', u'category_str_list': [u'Hair Salons', u'Vinyl Records'], u'link': u'/biz/radar-hair-and-records-seattle-2', u'address': u'\n\t\t\t2724 1st Ave SSeattle, WA 98134\n\t\t', u'desc': u'Radar Hair & Records', u'_id': ObjectId('524c04c4e291973e11364970'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.57893199999999, u'lng': -122.333697}, u'viewport': {u'northeast': {u'lat': 47.58028098029149, u'lng': -122.3323480197085}, u'southwest': {u'lat': 47.57758301970849, u'lng': -122.3350459802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2724', u'types': [u'street_number'], u'short_name': u'2724'}, {u'long_name': u'1st Avenue South', u'types': [u'route'], u'short_name': u'1st Avenue South'}, {u'long_name': u'Industrial District East', u'types': [u'neighborhood', u'political'], u'short_name': u'Industrial District East'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98134', u'types': [u'postal_code'], u'short_name': u'98134'}], u'partial_match': True, u'formatted_address': u'2724 1st Avenue South, Seattle, WA 98134, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,549][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,549][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Floor to ceiling windows facing the bay and the stadiums.', u'review_count': u'252', u'title': u'Hotel 1000', u'rating_string': u'4.5', u'category_str_list': [u'Hotels'], u'link': u'/biz/hotel-1000-seattle', u'address': u'\n\t\t\t1000 First AvenueSeattle, WA 98104\n\t\t', u'desc': u'Hotel 1000', u'_id': ObjectId('524c04c4e291973e11364971'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.605049, u'lng': -122.336106}, u'viewport': {u'northeast': {u'lat': 47.6063979802915, u'lng': -122.3347570197085}, u'southwest': {u'lat': 47.6037000197085, u'lng': -122.3374549802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1000', u'types': [u'street_number'], u'short_name': u'1000'}, {u'long_name': u'1st Avenue', u'types': [u'route'], u'short_name': u'1st Ave'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'formatted_address': u'1000 1st Avenue, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,550][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,550][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'A must try for anyone who loves a good Gyro.', u'review_count': u'522', u'title': u'Mr. Gyros', u'rating_string': u'4.5', u'category_str_list': [u'Sandwiches', u'Greek', u'Middle Eastern'], u'link': u'/biz/mr-gyros-seattle', u'address': u'\n\t\t\t8411 Greenwood Ave NSeattle, WA 98103\n\t\t', u'desc': u'Mr. Gyros', u'_id': ObjectId('524c04c4e291973e11364972'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6902581, u'lng': -122.3555547}, u'viewport': {u'northeast': {u'lat': 47.6916070802915, u'lng': -122.3542057197085}, u'southwest': {u'lat': 47.68890911970851, u'lng': -122.3569036802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'8411', u'types': [u'street_number'], u'short_name': u'8411'}, {u'long_name': u'Greenwood Avenue North', u'types': [u'route'], u'short_name': u'Greenwood Ave N'}, {u'long_name': u'Greenwood', u'types': [u'neighborhood', u'political'], u'short_name': u'Greenwood'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'8411 Greenwood Avenue North, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,550][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,551][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"It's a great area, right near the Space Needle and EMP museum.", u'review_count': u'266', u'title': u'Chihuly Garden and Glass', u'rating_string': u'4.5', u'category_str_list': [u'Art Galleries', u'Museums'], u'link': u'/biz/chihuly-garden-and-glass-seattle-2', u'address': u'\n\t\t\t305 Harrison StSeattle, WA 98109\n\t\t', u'desc': u'Chihuly Garden and Glass', u'_id': ObjectId('524c04c4e291973e11364973'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.62048160000001, u'lng': -122.3504451}, u'viewport': {u'northeast': {u'lat': 47.62183058029151, u'lng': -122.3490961197085}, u'southwest': {u'lat': 47.61913261970851, u'lng': -122.3517940802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'305', u'types': [u'street_number'], u'short_name': u'305'}, {u'long_name': u'Harrison Street', u'types': [u'route'], u'short_name': u'Harrison St'}, {u'long_name': u'South-Lake Union', u'types': [u'neighborhood', u'political'], u'short_name': u'South-Lake Union'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98109', u'types': [u'postal_code'], u'short_name': u'98109'}], u'formatted_address': u'305 Harrison Street, Seattle, WA 98109, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,551][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,551][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I enjoyed both, but the porchetta was the hands down fave.', u'review_count': u'862', u'title': u'Salumi Artisan Cured Meats', u'rating_string': u'4.5', u'category_str_list': [u'Italian', u'Delis', u'Meat Shops'], u'link': u'/biz/salumi-artisan-cured-meats-seattle-2', u'address': u'\n\t\t\t309 3rd Ave SSeattle, WA 98104\n\t\t', u'desc': u'Salumi Artisan Cured Meats', u'_id': ObjectId('524c04c4e291973e11364974'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.5997289, u'lng': -122.3305171}, u'viewport': {u'northeast': {u'lat': 47.6010778802915, u'lng': -122.3291681197085}, u'southwest': {u'lat': 47.5983799197085, u'lng': -122.3318660802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'309', u'types': [u'street_number'], u'short_name': u'309'}, {u'long_name': u'3rd Avenue South', u'types': [u'route'], u'short_name': u'3rd Ave S'}, {u'long_name': u'Pioneer Square', u'types': [u'neighborhood', u'political'], u'short_name': u'Pioneer Square'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'partial_match': True, u'formatted_address': u'309 3rd Avenue South, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,552][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,552][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I thought the tour was very informative and interesting.', u'review_count': u'478', u'title': u'Theo Chocolate', u'rating_string': u'4.5', u'category_str_list': [u'Chocolatiers & Shops'], u'link': u'/biz/theo-chocolate-seattle', u'address': u'\n\t\t\t3400 Phinney Ave NSeattle, WA 98103\n\t\t', u'desc': u'Theo Chocolate', u'_id': ObjectId('524c04c4e291973e11364975'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.65088, u'lng': -122.354102}, u'viewport': {u'northeast': {u'lat': 47.6522289802915, u'lng': -122.3527530197085}, u'southwest': {u'lat': 47.6495310197085, u'lng': -122.3554509802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'3400', u'types': [u'street_number'], u'short_name': u'3400'}, {u'long_name': u'Phinney Avenue North', u'types': [u'route'], u'short_name': u'Phinney Ave N'}, {u'long_name': u'Fremont', u'types': [u'neighborhood', u'political'], u'short_name': u'Fremont'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'3400 Phinney Avenue North, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,553][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,553][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Sex positive, excellent selection, friendly and helpful staff.', u'review_count': u'195', u'title': u'Babeland', u'rating_string': u'4.5', u'category_str_list': [u'Adult'], u'link': u'/biz/babeland-seattle', u'address': u'\n\t\t\t707 E Pike StSeattle, WA 98122\n\t\t', u'desc': u'Babeland', u'_id': ObjectId('524c04c4e291973e11364976'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6139774, u'lng': -122.3229505}, u'viewport': {u'northeast': {u'lat': 47.61532638029149, u'lng': -122.3216015197085}, u'southwest': {u'lat': 47.61262841970849, u'lng': -122.3242994802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'707', u'types': [u'street_number'], u'short_name': u'707'}, {u'long_name': u'East Pike Street', u'types': [u'route'], u'short_name': u'E Pike St'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'707 East Pike Street, Seattle, WA 98122, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,553][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,554][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"Quite easily the BEST New England style clam chowder I've had.", u'review_count': u'1591', u'title': u'Pike Place Chowder', u'rating_string': u'4.5', u'category_str_list': [u'Seafood', u'American (Traditional)', u'Soup'], u'link': u'/biz/pike-place-chowder-seattle', u'address': u'\n\t\t\t1530 Post AlySeattle, WA 98101\n\t\t', u'desc': u'Pike Place Chowder', u'_id': ObjectId('524c04c4e291973e11364977'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6093656, u'lng': -122.3410995}, u'viewport': {u'northeast': {u'lat': 47.6107145802915, u'lng': -122.3397505197085}, u'southwest': {u'lat': 47.6080166197085, u'lng': -122.3424484802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1530', u'types': [u'street_number'], u'short_name': u'1530'}, {u'long_name': u'Post Alley', u'types': [u'route'], u'short_name': u'Post Alley'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1530 Post Alley, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,554][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,554][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I wish we had these wonderful powdered doughnuts in San Jose.', u'review_count': u'462', u'title': u'Daily Dozen Doughnut Company', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries', u'Donuts'], u'link': u'/biz/daily-dozen-doughnut-company-seattle', u'address': u'\n\t\t\t93 Pike StSeattle, WA 98101\n\t\t', u'desc': u'Daily Dozen Doughnut Company', u'_id': ObjectId('524c04c4e291973e11364978'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6085795, u'lng': -122.3402147}, u'viewport': {u'northeast': {u'lat': 47.60992848029149, u'lng': -122.3388657197085}, u'southwest': {u'lat': 47.60723051970849, u'lng': -122.3415636802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'93', u'types': [u'street_number'], u'short_name': u'93'}, {u'long_name': u'Pike Street', u'types': [u'route'], u'short_name': u'Pike St'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'93 Pike Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,555][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,555][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I loved the raspberry glaze over vanilla cake donut.', u'review_count': u'509', u'title': u'Mighty-O Donuts', u'rating_string': u'4.5', u'category_str_list': [u'Donuts', u'Vegan', u'Bakeries'], u'link': u'/biz/mighty-o-donuts-seattle', u'address': u'\n\t\t\t2110 N 55th StSeattle, WA 98103\n\t\t', u'desc': u'Mighty-O Donuts', u'_id': ObjectId('524c04c4e291973e11364979'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6688469, u'lng': -122.3333219}, u'viewport': {u'northeast': {u'lat': 47.67019588029149, u'lng': -122.3319729197085}, u'southwest': {u'lat': 47.6674979197085, u'lng': -122.3346708802915}}, u'location_type': u'APPROXIMATE'}, u'address_components': [{u'long_name': u'2110', u'types': [u'street_number'], u'short_name': u'2110'}, {u'long_name': u'North 55th Street', u'types': [u'route'], u'short_name': u'N 55th St'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'2110 North 55th Street, Seattle, WA 98103, United States', u'types': [u'subpremise']}, {u'geometry': {u'location': {u'lat': 47.6687807, u'lng': -122.333211}, u'viewport': {u'northeast': {u'lat': 47.6701296802915, u'lng': -122.3318620197085}, u'southwest': {u'lat': 47.6674317197085, u'lng': -122.3345599802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2110', u'types': [u'street_number'], u'short_name': u'2110'}, {u'long_name': u'North 55th Street', u'types': [u'route'], u'short_name': u'N 55th St'}, {u'long_name': u'Wallingford', u'types': [u'neighborhood', u'political'], u'short_name': u'Wallingford'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'2110 North 55th Street, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,556][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,556][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I love this place and I love that all the teas are organic.', u'review_count': u'327', u'title': u'Remedy Teas', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea', u'Tea Rooms'], u'link': u'/biz/remedy-teas-seattle', u'address': u'\n\t\t\t345 15th Ave ESeattle, WA 98112\n\t\t', u'desc': u'Remedy Teas', u'_id': ObjectId('524c04c4e291973e1136497a'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6217996, u'lng': -122.3129002}, u'viewport': {u'northeast': {u'lat': 47.6231485802915, u'lng': -122.3115512197085}, u'southwest': {u'lat': 47.6204506197085, u'lng': -122.3142491802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'345', u'types': [u'street_number'], u'short_name': u'345'}, {u'long_name': u'15th Avenue East', u'types': [u'route'], u'short_name': u'15th Ave E'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98112', u'types': [u'postal_code'], u'short_name': u'98112'}], u'formatted_address': u'345 15th Avenue East, Seattle, WA 98112, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,556][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,557][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'i abso-effing-lutely LOVE this taco bus.', u'review_count': u'189', u'title': u'Tacos El Asadero', u'rating_string': u'4.5', u'category_str_list': [u'Mexican', u'Food Trucks', u'Sandwiches'], u'link': u'/biz/tacos-el-asadero-seattle-2', u'address': u'\n\t\t\t3517 Rainier Ave SSeattle, WA 98118\n\t\t', u'desc': u'Tacos El Asadero', u'_id': ObjectId('524c04c4e291973e1136497b'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.5713043, u'lng': -122.2927705}, u'southwest': {u'lat': 47.5712986, u'lng': -122.292787}}, u'viewport': {u'northeast': {u'lat': 47.5726504302915, u'lng': -122.2914297697085}, u'southwest': {u'lat': 47.5699524697085, u'lng': -122.2941277302915}}, u'location': {u'lat': 47.5712986, u'lng': -122.292787}}, u'address_components': [{u'long_name': u'3517', u'types': [u'street_number'], u'short_name': u'3517'}, {u'long_name': u'Rainier Avenue South', u'types': [u'route'], u'short_name': u'Rainier Ave S'}, {u'long_name': u'Rainier Valley', u'types': [u'neighborhood', u'political'], u'short_name': u'Rainier Valley'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98144', u'types': [u'postal_code'], u'short_name': u'98144'}], u'partial_match': True, u'formatted_address': u'3517 Rainier Avenue South, Seattle, WA 98144, USA', u'types': [u'street_address']}, {u'geometry': {u'location': {u'lat': 47.4984254, u'lng': -122.1814804}, u'viewport': {u'northeast': {u'lat': 47.49977438029149, u'lng': -122.1801314197085}, u'southwest': {u'lat': 47.4970764197085, u'lng': -122.1828293802915}}, u'location_type': u'GEOMETRIC_CENTER'}, u'address_components': [{u'long_name': u'Rainier Avenue South', u'types': [u'route'], u'short_name': u'Rainier Ave S'}, {u'long_name': u'Greater Highland Shopping Center', u'types': [u'establishment'], u'short_name': u'Greater Highland Shopping Center'}, {u'long_name': u'Rainier Valley', u'types': [u'neighborhood', u'political'], u'short_name': u'Rainier Valley'}, {u'long_name': u'Renton', u'types': [u'locality', u'political'], u'short_name': u'Renton'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98057', u'types': [u'postal_code'], u'short_name': u'98057'}], u'partial_match': True, u'formatted_address': u'Rainier Avenue South, Greater Highland Shopping Center, Renton, WA 98057, USA', u'types': [u'route']}, {u'geometry': {u'location': {u'lat': 47.5344087, u'lng': -122.2644323}, u'viewport': {u'northeast': {u'lat': 47.5357576802915, u'lng': -122.2630833197085}, u'southwest': {u'lat': 47.5330597197085, u'lng': -122.2657812802915}}, u'location_type': u'GEOMETRIC_CENTER'}, u'address_components': [{u'long_name': u'Rainier Avenue South', u'types': [u'route'], u'short_name': u'Rainier Ave S'}, {u'long_name': u'Rainier Valley', u'types': [u'neighborhood', u'political'], u'short_name': u'Rainier Valley'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98118', u'types': [u'postal_code'], u'short_name': u'98118'}], u'partial_match': True, u'formatted_address': u'Rainier Avenue South, Seattle, WA 98118, USA', u'types': [u'route']}]}
[2015-03-18 16:39:32,557][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,558][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'We also had the pleasure of meeting Henri, the owner.', u'review_count': u'106', u'title': u'Bottlehouse', u'rating_string': u'4.5', u'category_str_list': [u'Wine Bars', u'Tapas/Small Plates'], u'link': u'/biz/bottlehouse-seattle', u'address': u'\n\t\t\t1416 34th AveSeattle, WA 98122\n\t\t', u'desc': u'Bottlehouse', u'_id': ObjectId('524c04c4e291973e1136497c'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.613459, u'lng': -122.288968}, u'viewport': {u'northeast': {u'lat': 47.61480798029149, u'lng': -122.2876190197085}, u'southwest': {u'lat': 47.6121100197085, u'lng': -122.2903169802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1416', u'types': [u'street_number'], u'short_name': u'1416'}, {u'long_name': u'34th Avenue', u'types': [u'route'], u'short_name': u'34th Ave'}, {u'long_name': u'Central District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'1416 34th Avenue, Seattle, WA 98122, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,558][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,558][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'It also gave us a chance to chat with Chef Dustin.', u'review_count': u'303', u'title': u'Art of The Table', u'rating_string': u'4.5', u'category_str_list': [u'American (New)', u'Greek'], u'link': u'/biz/art-of-the-table-seattle', u'address': u'\n\t\t\t1054 N 39th StSeattle, WA 98103\n\t\t', u'desc': u'Art of The Table', u'_id': ObjectId('524c04c4e291973e1136497d'), u'price_range': 4, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6541077, u'lng': -122.3441178}, u'viewport': {u'northeast': {u'lat': 47.65545668029149, u'lng': -122.3427688197085}, u'southwest': {u'lat': 47.6527587197085, u'lng': -122.3454667802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1054', u'types': [u'street_number'], u'short_name': u'1054'}, {u'long_name': u'North 39th Street', u'types': [u'route'], u'short_name': u'N 39th St'}, {u'long_name': u'Fremont', u'types': [u'neighborhood', u'political'], u'short_name': u'Fremont'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'1054 North 39th Street, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,559][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,559][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I am even sipping the most amazing Egg Nog Latte right now.', u'review_count': u'243', u'title': u'Monorail Espresso', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea'], u'link': u'/biz/monorail-espresso-seattle', u'address': u'\n\t\t\t520 Pike StSeattle, WA 98101\n\t\t', u'desc': u'Monorail Espresso', u'_id': ObjectId('524c04c4e291973e1136497e'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.611234, u'lng': -122.334994}, u'viewport': {u'northeast': {u'lat': 47.6125829802915, u'lng': -122.3336450197085}, u'southwest': {u'lat': 47.6098850197085, u'lng': -122.3363429802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'520', u'types': [u'street_number'], u'short_name': u'520'}, {u'long_name': u'Pike Street', u'types': [u'route'], u'short_name': u'Pike St'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'520 Pike Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,560][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,560][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'is classic Seattle, and simply the best bookstore in town.', u'review_count': u'315', u'title': u'The Elliott Bay Book Company', u'rating_string': u'4.5', u'category_str_list': [u'Bookstores'], u'link': u'/biz/the-elliott-bay-book-company-seattle', u'address': u'\n\t\t\t1521 10th AveSeattle, WA 98122\n\t\t', u'desc': u'The Elliott Bay Book Company', u'_id': ObjectId('524c04c4e291973e1136497f'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 47.625468, u'lng': -122.263535}, u'southwest': {u'lat': 47.590821, u'lng': -122.3290361}}, u'viewport': {u'northeast': {u'lat': 47.625468, u'lng': -122.263535}, u'southwest': {u'lat': 47.590821, u'lng': -122.3290361}}, u'location': {u'lat': 47.6087583, u'lng': -122.2964235}}, u'address_components': [{u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'partial_match': True, u'formatted_address': u'Seattle, WA 98122, USA', u'types': [u'postal_code']}]}
[2015-03-18 16:39:32,560][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,561][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I'll be coming back here for my next pair of running shoes.", u'review_count': u'137', u'title': u"Super Jock 'n Jill", u'rating_string': u'5.0', u'category_str_list': [u'Sports Wear'], u'link': u'/biz/super-jock-n-jill-seattle', u'address': u'\n\t\t\t7210 E Green Lake Dr NSeattle, WA 98115\n\t\t', u'desc': u"Super Jock 'n Jill", u'_id': ObjectId('524c04c4e291973e11364980'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 47.702855, u'lng': -122.231835}, u'southwest': {u'lat': 47.669325, u'lng': -122.3472928}}, u'viewport': {u'northeast': {u'lat': 47.702855, u'lng': -122.231835}, u'southwest': {u'lat': 47.669325, u'lng': -122.3472928}}, u'location': {u'lat': 47.6849444, u'lng': -122.2982224}}, u'address_components': [{u'long_name': u'98115', u'types': [u'postal_code'], u'short_name': u'98115'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'partial_match': True, u'formatted_address': u'Seattle, WA 98115, USA', u'types': [u'postal_code']}]}
[2015-03-18 16:39:32,561][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,561][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'What a great little gem right outside Pike Place Market.', u'review_count': u'632', u'title': u'The Crumpet Shop', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries', u'Coffee & Tea', u'Breakfast & Brunch'], u'link': u'/biz/the-crumpet-shop-seattle', u'address': u'\n\t\t\t1503 1st AveSeattle, WA 98101\n\t\t', u'desc': u'The Crumpet Shop', u'_id': ObjectId('524c04c4e291973e11364981'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.60905469999999, u'lng': -122.3398314}, u'viewport': {u'northeast': {u'lat': 47.61040368029149, u'lng': -122.3384824197085}, u'southwest': {u'lat': 47.6077057197085, u'lng': -122.3411803802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1503', u'types': [u'street_number'], u'short_name': u'1503'}, {u'long_name': u'1st Avenue', u'types': [u'route'], u'short_name': u'1st Ave'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1503 1st Avenue, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,562][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,562][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Incredible market with an added bonus of a delicious food court.', u'review_count': u'595', u'title': u'Uwajimaya', u'rating_string': u'4.5', u'category_str_list': [u'Grocery', u'Ethnic Food'], u'link': u'/biz/uwajimaya-seattle', u'address': u'\n\t\t\t600 5th Ave SSeattle, WA 98104\n\t\t', u'desc': u'Uwajimaya', u'_id': ObjectId('524c04c4e291973e11364982'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.60407439999999, u'lng': -122.329112}, u'viewport': {u'northeast': {u'lat': 47.6054233802915, u'lng': -122.3277630197085}, u'southwest': {u'lat': 47.6027254197085, u'lng': -122.3304609802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'600', u'types': [u'street_number'], u'short_name': u'600'}, {u'long_name': u'5th Avenue', u'types': [u'route'], u'short_name': u'5th Ave'}, {u'long_name': u'Pioneer Square', u'types': [u'neighborhood', u'political'], u'short_name': u'Pioneer Square'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'partial_match': True, u'formatted_address': u'600 5th Avenue, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,562][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,563][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I loved the pistachio, and my friend loved the lavender.', u'review_count': u'217', u'title': u"D'Ambrosio Gelato", u'rating_string': u'4.5', u'category_str_list': [u'Ice Cream & Frozen Yogurt', u'Desserts', u'Gelato'], u'link': u'/biz/d-ambrosio-gelato-seattle', u'address': u'\n\t\t\t5339 Ballard Ave NWSeattle, WA 98107\n\t\t', u'desc': u"D'Ambrosio Gelato", u'_id': ObjectId('524c04c4e291973e11364983'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6672559, u'lng': -122.3842058}, u'southwest': {u'lat': 47.667248, u'lng': -122.3842201}}, u'viewport': {u'northeast': {u'lat': 47.6686009302915, u'lng': -122.3828639697085}, u'southwest': {u'lat': 47.6659029697085, u'lng': -122.3855619302915}}, u'location': {u'lat': 47.667248, u'lng': -122.3842201}}, u'address_components': [{u'long_name': u'5339', u'types': [u'street_number'], u'short_name': u'5339'}, {u'long_name': u'Ballard Avenue Northwest', u'types': [u'route'], u'short_name': u'Ballard Ave NW'}, {u'long_name': u'Old Ballard', u'types': [u'neighborhood', u'political'], u'short_name': u'Old Ballard'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98107', u'types': [u'postal_code'], u'short_name': u'98107'}], u'formatted_address': u'5339 Ballard Avenue Northwest, Seattle, WA 98107, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,563][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,564][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The fruit tarts and mini-pastries are equally delicious.', u'review_count': u'930', u'title': u'Le Panier French Bakery', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries', u'French', u'Sandwiches'], u'link': u'/biz/le-panier-french-bakery-seattle', u'address': u'\n\t\t\t1902 Pike PlaceSeattle, WA 98101\n\t\t', u'desc': u'Le Panier French Bakery', u'_id': ObjectId('524c04c4e291973e11364984'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6097252, u'lng': -122.342241}, u'southwest': {u'lat': 47.6097158, u'lng': -122.3422531}}, u'viewport': {u'northeast': {u'lat': 47.6110694802915, u'lng': -122.3408980697085}, u'southwest': {u'lat': 47.6083715197085, u'lng': -122.3435960302915}}, u'location': {u'lat': 47.6097252, u'lng': -122.342241}}, u'address_components': [{u'long_name': u'1902', u'types': [u'street_number'], u'short_name': u'1902'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1902 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,564][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,564][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I can't wait to come back and have the Mac & Cheese again.", u'review_count': u'992', u'title': u"Beecher's Handmade Cheese", u'rating_string': u'4.5', u'category_str_list': [u'Grocery'], u'link': u'/biz/beechers-handmade-cheese-seattle', u'address': u'\n\t\t\t1600 Pike PlSeattle, WA 98101\n\t\t', u'desc': u"Beecher's Handmade Cheese", u'_id': ObjectId('524c04c4e291973e11364985'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6096487, u'lng': -122.3418779}, u'viewport': {u'northeast': {u'lat': 47.6109976802915, u'lng': -122.3405289197085}, u'southwest': {u'lat': 47.6082997197085, u'lng': -122.3432268802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1600', u'types': [u'street_number'], u'short_name': u'1600'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1600 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,565][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,565][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'...set, crazy cat lady action figure, corndog air freshener, and my...', u'review_count': u'249', u'title': u'Archie McPhee', u'rating_string': u'4.5', u'category_str_list': [u'Toy Stores'], u'link': u'/biz/archie-mcphee-seattle', u'address': u'\n\t\t\t1300 N 45th StSeattle, WA 98103\n\t\t', u'desc': u'Archie McPhee', u'_id': ObjectId('524c04c4e291973e11364986'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.661506, u'lng': -122.3417113}, u'viewport': {u'northeast': {u'lat': 47.66285498029149, u'lng': -122.3403623197085}, u'southwest': {u'lat': 47.66015701970849, u'lng': -122.3430602802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1300', u'types': [u'street_number'], u'short_name': u'1300'}, {u'long_name': u'North 45th Street', u'types': [u'route'], u'short_name': u'N 45th St'}, {u'long_name': u'Wallingford', u'types': [u'neighborhood', u'political'], u'short_name': u'Wallingford'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'1300 North 45th Street, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,565][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,566][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'FRESH SQUEEZED FRUIT JUICES (performed with an old timey juicer.', u'review_count': u'281', u'title': u'Sun Liquor', u'rating_string': u'4.5', u'category_str_list': [u'Lounges'], u'link': u'/biz/sun-liquor-seattle', u'address': u'\n\t\t\t607 Summit Ave ESeattle, WA 98102\n\t\t', u'desc': u'Sun Liquor', u'_id': ObjectId('524c04c4e291973e11364987'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6245574, u'lng': -122.3253025}, u'southwest': {u'lat': 47.6245573, u'lng': -122.325321}}, u'viewport': {u'northeast': {u'lat': 47.6259063302915, u'lng': -122.3239627697085}, u'southwest': {u'lat': 47.6232083697085, u'lng': -122.3266607302915}}, u'location': {u'lat': 47.6245573, u'lng': -122.325321}}, u'address_components': [{u'long_name': u'607', u'types': [u'street_number'], u'short_name': u'607'}, {u'long_name': u'Summit Avenue East', u'types': [u'route'], u'short_name': u'Summit Ave E'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98102', u'types': [u'postal_code'], u'short_name': u'98102'}], u'formatted_address': u'607 Summit Avenue East, Seattle, WA 98102, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,566][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,567][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Not to mention all the lovely flowers and neat little art stands.', u'review_count': u'1690', u'title': u'Pike Place Market', u'rating_string': u'4.5', u'category_str_list': [u'Fruits & Veggies', u'Farmers Market', u'Shopping Centers'], u'link': u'/biz/pike-place-market-seattle', u'address': u'\n\t\t\t85 Pike StSeattle, WA 98101\n\t\t', u'desc': u'Pike Place Market', u'_id': ObjectId('524c04c4e291973e11364988'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.60864979999999, u'lng': -122.3405887}, u'viewport': {u'northeast': {u'lat': 47.60999878029149, u'lng': -122.3392397197085}, u'southwest': {u'lat': 47.60730081970849, u'lng': -122.3419376802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'85', u'types': [u'street_number'], u'short_name': u'85'}, {u'long_name': u'Pike Street', u'types': [u'route'], u'short_name': u'Pike St'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'85 Pike Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,567][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,567][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Michael has done an amazing job every time I used him.', u'review_count': u'70', u'title': u'Buckets', u'rating_string': u'5.0', u'category_str_list': [u'Florists'], u'link': u'/biz/buckets-seattle', u'address': u'\n\t\t\t1219 1st AveSeattle, WA 98101\n\t\t', u'desc': u'Buckets', u'_id': ObjectId('524c04c4e291973e11364989'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6066238, u'lng': -122.3381038}, u'viewport': {u'northeast': {u'lat': 47.6079727802915, u'lng': -122.3367548197085}, u'southwest': {u'lat': 47.60527481970851, u'lng': -122.3394527802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1219', u'types': [u'street_number'], u'short_name': u'1219'}, {u'long_name': u'1st Avenue', u'types': [u'route'], u'short_name': u'1st Ave'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1219 1st Avenue, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,568][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,568][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Well worth a visit if you like more obscure movies.', u'review_count': u'151', u'title': u'Scarecrow Video', u'rating_string': u'4.5', u'category_str_list': [u'Videos & Video Game Rental', u'Music & DVDs'], u'link': u'/biz/scarecrow-video-seattle', u'address': u'\n\t\t\t5030 Roosevelt Way NESeattle, WA 98105\n\t\t', u'desc': u'Scarecrow Video', u'_id': ObjectId('524c04c4e291973e1136498a'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.665918, u'lng': -122.317083}, u'viewport': {u'northeast': {u'lat': 47.66726698029149, u'lng': -122.3157340197085}, u'southwest': {u'lat': 47.66456901970849, u'lng': -122.3184319802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'5030', u'types': [u'street_number'], u'short_name': u'5030'}, {u'long_name': u'Roosevelt Way Northeast', u'types': [u'route'], u'short_name': u'Roosevelt Way NE'}, {u'long_name': u'Northeast Seattle', u'types': [u'neighborhood', u'political'], u'short_name': u'Northeast Seattle'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98105', u'types': [u'postal_code'], u'short_name': u'98105'}], u'formatted_address': u'5030 Roosevelt Way Northeast, Seattle, WA 98105, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,568][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,569][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I really love both the Manny's and 9llb Porter Beers.", u'review_count': u'117', u'title': u'Georgetown Brewing Company', u'rating_string': u'5.0', u'category_str_list': [u'Breweries'], u'link': u'/biz/georgetown-brewing-company-seattle', u'address': u'\n\t\t\t5200 Denver Ave SSeattle, WA 98108\n\t\t', u'desc': u'Georgetown Brewing Company', u'_id': ObjectId('524c04c4e291973e1136498b'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.555317, u'lng': -122.325716}, u'viewport': {u'northeast': {u'lat': 47.55666598029149, u'lng': -122.3243670197085}, u'southwest': {u'lat': 47.55396801970849, u'lng': -122.3270649802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'5200', u'types': [u'street_number'], u'short_name': u'5200'}, {u'long_name': u'Denver Avenue South', u'types': [u'route'], u'short_name': u'Denver Ave S'}, {u'long_name': u'Industrial District East', u'types': [u'neighborhood', u'political'], u'short_name': u'Industrial District East'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98108', u'types': [u'postal_code'], u'short_name': u'98108'}], u'partial_match': True, u'formatted_address': u'5200 Denver Avenue South, Seattle, WA 98108, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,569][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,569][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'where they showed how they make their delicious pastrami.', u'review_count': u'518', u'title': u"Tat's Delicatessen", u'rating_string': u'4.5', u'category_str_list': [u'Delis', u'Cheesesteaks', u'Caterers'], u'link': u'/biz/tats-delicatessen-seattle', u'address': u'\n\t\t\t159 Yesler WaySeattle, WA 98104\n\t\t', u'desc': u"Tat's Delicatessen", u'_id': ObjectId('524c04c4e291973e1136498c'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6015656, u'lng': -122.3324451}, u'viewport': {u'northeast': {u'lat': 47.6029145802915, u'lng': -122.3310961197085}, u'southwest': {u'lat': 47.6002166197085, u'lng': -122.3337940802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'159', u'types': [u'street_number'], u'short_name': u'159'}, {u'long_name': u'Yesler Way', u'types': [u'route'], u'short_name': u'Yesler Way'}, {u'long_name': u'Pioneer Square', u'types': [u'neighborhood', u'political'], u'short_name': u'Pioneer Square'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'formatted_address': u'159 Yesler Way, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,570][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,570][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'You even get to walk through a Concorde and an old air force one.', u'review_count': u'202', u'title': u'The Museum of Flight', u'rating_string': u'4.5', u'category_str_list': [u'Museums'], u'link': u'/biz/the-museum-of-flight-seattle', u'address': u'\n\t\t\t9404 East Marginal Way SSeattle, WA 98108\n\t\t', u'desc': u'The Museum of Flight', u'_id': ObjectId('524c04c4e291973e1136498d'), u'price_range': 0, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.518305, u'lng': -122.2966219}, u'viewport': {u'northeast': {u'lat': 47.51965398029149, u'lng': -122.2952729197085}, u'southwest': {u'lat': 47.5169560197085, u'lng': -122.2979708802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'9404', u'types': [u'street_number'], u'short_name': u'9404'}, {u'long_name': u'King County International Airport', u'types': [u'establishment'], u'short_name': u'KBFI'}, {u'long_name': u'East Marginal Way South', u'types': [u'route'], u'short_name': u'E Marginal Way S'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98108', u'types': [u'postal_code'], u'short_name': u'98108'}], u'partial_match': True, u'formatted_address': u'9404 East Marginal Way South, King County International Airport, Seattle, WA 98108, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,571][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,571][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I can't stop thinking about their Midnight Cuban Press sandwich.", u'review_count': u'2517', u'title': u'Paseo', u'rating_string': u'4.5', u'category_str_list': [u'Caribbean', u'Sandwiches', u'Cuban'], u'link': u'/biz/paseo-seattle', u'address': u'\n\t\t\t4225 Fremont Ave NSeattle, WA 98103\n\t\t', u'desc': u'Paseo', u'_id': ObjectId('524c04c4e291973e1136498e'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.658494, u'lng': -122.350312}, u'viewport': {u'northeast': {u'lat': 47.6598429802915, u'lng': -122.3489630197085}, u'southwest': {u'lat': 47.6571450197085, u'lng': -122.3516609802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'4225', u'types': [u'street_number'], u'short_name': u'4225'}, {u'long_name': u'Fremont Avenue North', u'types': [u'route'], u'short_name': u'Fremont Ave N'}, {u'long_name': u'Fremont', u'types': [u'neighborhood', u'political'], u'short_name': u'Fremont'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'4225 Fremont Avenue North, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,573][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,574][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Morgan has done such an amazing job with this place.', u'review_count': u'109', u'title': u'The Beer Junction', u'rating_string': u'5.0', u'category_str_list': [u'Beer, Wine & Spirits', u'Bars'], u'link': u'/biz/the-beer-junction-seattle', u'address': u'\n\t\t\t4511 California Ave SWSeattle, WA 98116\n\t\t', u'desc': u'The Beer Junction', u'_id': ObjectId('524c04c4e291973e1136498f'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.5625686, u'lng': -122.386785}, u'southwest': {u'lat': 47.5625686, u'lng': -122.3868034}}, u'viewport': {u'northeast': {u'lat': 47.5639175802915, u'lng': -122.3854452197085}, u'southwest': {u'lat': 47.5612196197085, u'lng': -122.3881431802915}}, u'location': {u'lat': 47.5625686, u'lng': -122.3868034}}, u'address_components': [{u'long_name': u'4511', u'types': [u'street_number'], u'short_name': u'4511'}, {u'long_name': u'California Avenue Southwest', u'types': [u'route'], u'short_name': u'California Ave SW'}, {u'long_name': u'Junction', u'types': [u'neighborhood', u'political'], u'short_name': u'Junction'}, {u'long_name': u'West Seattle', u'types': [u'sublocality', u'political'], u'short_name': u'West Seattle'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98116', u'types': [u'postal_code'], u'short_name': u'98116'}], u'formatted_address': u'4511 California Avenue Southwest, Seattle, WA 98116, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,574][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,576][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'love love love love their twice baked almond croissant.', u'review_count': u'717', u'title': u'Bakery Nouveau', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries'], u'link': u'/biz/bakery-nouveau-seattle', u'address': u'\n\t\t\t4737 California Ave SWSeattle, WA 98116\n\t\t', u'desc': u'Bakery Nouveau', u'_id': ObjectId('524c04c4e291973e11364990'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.56045810000001, u'lng': -122.3868115}, u'southwest': {u'lat': 47.5604579, u'lng': -122.3868299}}, u'viewport': {u'northeast': {u'lat': 47.56180698029151, u'lng': -122.3854717197085}, u'southwest': {u'lat': 47.55910901970851, u'lng': -122.3881696802915}}, u'location': {u'lat': 47.56045810000001, u'lng': -122.3868299}}, u'address_components': [{u'long_name': u'4737', u'types': [u'street_number'], u'short_name': u'4737'}, {u'long_name': u'California Avenue Southwest', u'types': [u'route'], u'short_name': u'California Ave SW'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98116', u'types': [u'postal_code'], u'short_name': u'98116'}], u'formatted_address': u'4737 California Avenue Southwest, Seattle, WA 98116, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,576][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,577][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I can't wait to go to the new spot by golden gardens this summer.", u'review_count': u'477', u'title': u'Paseo', u'rating_string': u'4.5', u'category_str_list': [u'Caribbean', u'Sandwiches', u'Cuban'], u'link': u'/biz/paseo-seattle-2', u'address': u'\n\t\t\t6226 Seaview Ave NWSeattle, WA 98107\n\t\t', u'desc': u'Paseo', u'_id': ObjectId('524c04c4e291973e11364991'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.674806, u'lng': -122.406133}, u'viewport': {u'northeast': {u'lat': 47.67615498029149, u'lng': -122.4047840197085}, u'southwest': {u'lat': 47.67345701970849, u'lng': -122.4074819802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'6226', u'types': [u'street_number'], u'short_name': u'6226'}, {u'long_name': u'Seaview Avenue Northwest', u'types': [u'route'], u'short_name': u'Seaview Ave NW'}, {u'long_name': u'Ballard', u'types': [u'neighborhood', u'political'], u'short_name': u'Ballard'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98107', u'types': [u'postal_code'], u'short_name': u'98107'}], u'formatted_address': u'6226 Seaview Avenue Northwest, Seattle, WA 98107, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,578][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,579][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I've had white mochas before, but their white velvet was amazing.", u'review_count': u'301', u'title': u'Espresso Vivace Sidewalk Bar', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea'], u'link': u'/biz/espresso-vivace-sidewalk-bar-seattle', u'address': u'\n\t\t\t321 Broadway ESeattle, WA 98102\n\t\t', u'desc': u'Espresso Vivace Sidewalk Bar', u'_id': ObjectId('524c04c4e291973e11364992'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.621665, u'lng': -122.3213002}, u'viewport': {u'northeast': {u'lat': 47.6230139802915, u'lng': -122.3199512197085}, u'southwest': {u'lat': 47.6203160197085, u'lng': -122.3226491802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'321', u'types': [u'street_number'], u'short_name': u'321'}, {u'long_name': u'Broadway East', u'types': [u'route'], u'short_name': u'Broadway E'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98102', u'types': [u'postal_code'], u'short_name': u'98102'}], u'formatted_address': u'321 Broadway East, Seattle, WA 98102, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,579][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,580][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"Seattle's best year round farmers market.", u'review_count': u'179', u'title': u'Ballard Sunday Farmers Market', u'rating_string': u'4.5', u'category_str_list': [u'Farmers Market'], u'link': u'/biz/ballard-sunday-farmers-market-seattle', u'address': u'\n\t\t\tBallard Ave At 22nd AveSeattle, WA 98107\n\t\t', u'desc': u'Ballard Sunday Farmers Market', u'_id': ObjectId('524c04c4e291973e11364993'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6676338, u'lng': -122.3847471}, u'viewport': {u'northeast': {u'lat': 47.6689827802915, u'lng': -122.3833981197085}, u'southwest': {u'lat': 47.6662848197085, u'lng': -122.3860960802915}}, u'location_type': u'APPROXIMATE'}, u'address_components': [{u'long_name': u'22nd Avenue Northwest', u'types': [u'route'], u'short_name': u'22nd Ave NW'}, {u'long_name': u'Old Ballard', u'types': [u'neighborhood', u'political'], u'short_name': u'Old Ballard'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98107', u'types': [u'postal_code'], u'short_name': u'98107'}], u'partial_match': True, u'formatted_address': u'22nd Avenue Northwest & Ballard Avenue Northwest, Seattle, WA 98107, USA', u'types': [u'intersection']}]}
[2015-03-18 16:39:32,582][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,587][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'LOVE LOVE LOVE the Beef and Cheese Piroshky here.', u'review_count': u'1672', u'title': u'Piroshky Piroshky', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries', u'Russian'], u'link': u'/biz/piroshky-piroshky-seattle', u'address': u'\n\t\t\t1908 Pike PlSeattle, WA 98101\n\t\t', u'desc': u'Piroshky Piroshky', u'_id': ObjectId('524c04c4e291973e11364994'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6099509, u'lng': -122.3424328}, u'viewport': {u'northeast': {u'lat': 47.6112998802915, u'lng': -122.3410838197085}, u'southwest': {u'lat': 47.60860191970851, u'lng': -122.3437817802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1908', u'types': [u'street_number'], u'short_name': u'1908'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1908 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,588][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,588][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'', u'review_count': u'147', u'title': u'Slave To The Needle', u'rating_string': u'4.5', u'category_str_list': [u'Tattoo', u'Piercing'], u'link': u'/biz/slave-to-the-needle-seattle-4', u'address': u'\n\t\t\t508 NW 65th StSeattle, WA 98117\n\t\t', u'desc': u'Slave To The Needle', u'_id': ObjectId('524c04c4e291973e11364995'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6760899, u'lng': -122.3629097}, u'viewport': {u'northeast': {u'lat': 47.6774388802915, u'lng': -122.3615607197085}, u'southwest': {u'lat': 47.6747409197085, u'lng': -122.3642586802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'508', u'types': [u'street_number'], u'short_name': u'508'}, {u'long_name': u'Northwest 65th Street', u'types': [u'route'], u'short_name': u'NW 65th St'}, {u'long_name': u'Phinney Ridge', u'types': [u'neighborhood', u'political'], u'short_name': u'Phinney Ridge'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98117', u'types': [u'postal_code'], u'short_name': u'98117'}], u'formatted_address': u'508 Northwest 65th Street, Seattle, WA 98117, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,589][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,590][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Great produce (much local), great prices, easy parking.', u'review_count': u'140', u'title': u"MacPherson's Fruit & Produce", u'rating_string': u'4.5', u'category_str_list': [u'Fruits & Veggies'], u'link': u'/biz/macphersons-fruit-and-produce-seattle', u'address': u'\n\t\t\t4500 15th Ave SSeattle, WA 98108\n\t\t', u'desc': u"MacPherson's Fruit & Produce", u'_id': ObjectId('524c04c4e291973e11364996'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.563088, u'lng': -122.3131055}, u'viewport': {u'northeast': {u'lat': 47.5644369802915, u'lng': -122.3117565197085}, u'southwest': {u'lat': 47.5617390197085, u'lng': -122.3144544802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'4500', u'types': [u'street_number'], u'short_name': u'4500'}, {u'long_name': u'15th Avenue South', u'types': [u'route'], u'short_name': u'15th Ave S'}, {u'long_name': u'Greater Duwamish', u'types': [u'neighborhood', u'political'], u'short_name': u'Greater Duwamish'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98108', u'types': [u'postal_code'], u'short_name': u'98108'}], u'partial_match': True, u'formatted_address': u'4500 15th Avenue South, Seattle, WA 98108, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,590][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,591][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I love everything about this place and Cafe Mox, too.', u'review_count': u'84', u'title': u'Card Kingdom', u'rating_string': u'5.0', u'category_str_list': [u'Hobby Shops'], u'link': u'/biz/card-kingdom-seattle', u'address': u'\n\t\t\t5105 Leary Ave NWSeattle, WA 98107\n\t\t', u'desc': u'Card Kingdom', u'_id': ObjectId('524c04c4e291973e11364997'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6650396, u'lng': -122.3805063}, u'viewport': {u'northeast': {u'lat': 47.6663885802915, u'lng': -122.3791573197085}, u'southwest': {u'lat': 47.6636906197085, u'lng': -122.3818552802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'5105', u'types': [u'street_number'], u'short_name': u'5105'}, {u'long_name': u'Card Kingdom Inc', u'types': [u'establishment'], u'short_name': u'Card Kingdom Inc'}, {u'long_name': u'Leary Avenue Northwest', u'types': [u'route'], u'short_name': u'Leary Ave NW'}, {u'long_name': u'Old Ballard', u'types': [u'neighborhood', u'political'], u'short_name': u'Old Ballard'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98107', u'types': [u'postal_code'], u'short_name': u'98107'}], u'formatted_address': u'5105 Leary Avenue Northwest, Card Kingdom Inc, Seattle, WA 98107, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,592][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,592][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"Sidecar is still totally #%&@*-n' awesome.", u'review_count': u'104', u'title': u'Vegan Haven', u'rating_string': u'4.5', u'category_str_list': [u'Specialty Food', u'Grocery', u'Vegan'], u'link': u'/biz/vegan-haven-seattle-2', u'address': u'\n\t\t\t5270 B University Way NESeattle, WA 98105\n\t\t', u'desc': u'Vegan Haven', u'_id': ObjectId('524c04c4e291973e11364998'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6684714, u'lng': -122.3127462}, u'viewport': {u'northeast': {u'lat': 47.6698203802915, u'lng': -122.3113972197085}, u'southwest': {u'lat': 47.6671224197085, u'lng': -122.3140951802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'5270', u'types': [u'street_number'], u'short_name': u'5270'}, {u'long_name': u'University Way Northeast', u'types': [u'route'], u'short_name': u'University Way NE'}, {u'long_name': u'Northeast Seattle', u'types': [u'neighborhood', u'political'], u'short_name': u'Northeast Seattle'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98105', u'types': [u'postal_code'], u'short_name': u'98105'}], u'partial_match': True, u'formatted_address': u'5270 University Way Northeast, Seattle, WA 98105, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,593][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,593][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I can't wait to return for some more delicious oysters.", u'review_count': u'629', u'title': u'The Walrus and the Carpenter', u'rating_string': u'4.0', u'category_str_list': [u'American (New)', u'Seafood', u'Live/Raw Food'], u'link': u'/biz/the-walrus-and-the-carpenter-seattle', u'address': u'\n\t\t\t4743 Ballard Ave NWSeattle, WA 98107\n\t\t', u'desc': u'The Walrus and the Carpenter', u'_id': ObjectId('524c04c4e291973e11364999'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.663511, u'lng': -122.38022}, u'viewport': {u'northeast': {u'lat': 47.6648599802915, u'lng': -122.3788710197085}, u'southwest': {u'lat': 47.6621620197085, u'lng': -122.3815689802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'4743', u'types': [u'street_number'], u'short_name': u'4743'}, {u'long_name': u'Ballard Avenue Northwest', u'types': [u'route'], u'short_name': u'Ballard Ave NW'}, {u'long_name': u'Old Ballard', u'types': [u'neighborhood', u'political'], u'short_name': u'Old Ballard'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98107', u'types': [u'postal_code'], u'short_name': u'98107'}], u'formatted_address': u'4743 Ballard Avenue Northwest, Seattle, WA 98107, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,594][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,595][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Wagyu is pricey but so worth it as a rare treat.', u'review_count': u'703', u'title': u'Metropolitan Grill', u'rating_string': u'4.5', u'category_str_list': [u'American (Traditional)', u'Steakhouses'], u'link': u'/biz/metropolitan-grill-seattle', u'address': u'\n\t\t\t820 2nd AveSeattle, WA 98104\n\t\t', u'desc': u'Metropolitan Grill', u'_id': ObjectId('524c04c4e291973e1136499a'), u'price_range': 4, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.60427929999999, u'lng': -122.3342738}, u'viewport': {u'northeast': {u'lat': 47.6056282802915, u'lng': -122.3329248197085}, u'southwest': {u'lat': 47.6029303197085, u'lng': -122.3356227802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'820', u'types': [u'street_number'], u'short_name': u'820'}, {u'long_name': u'2nd Avenue', u'types': [u'route'], u'short_name': u'2nd Ave'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'formatted_address': u'820 2nd Avenue, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,595][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,596][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Definitely will go back when I have a craving for Kouign Amann.', u'review_count': u'265', u'title': u'Honore Artisan Bakery', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries', u'French', u'Coffee & Tea'], u'link': u'/biz/honore-artisan-bakery-seattle-2', u'address': u'\n\t\t\t1413 NW 70th StSeattle, WA 98127\n\t\t', u'desc': u'Honore Artisan Bakery', u'_id': ObjectId('524c04c4e291973e1136499b'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6795419, u'lng': -122.3745413}, u'southwest': {u'lat': 47.6795295, u'lng': -122.3745414}}, u'viewport': {u'northeast': {u'lat': 47.6808846802915, u'lng': -122.3731923697085}, u'southwest': {u'lat': 47.67818671970851, u'lng': -122.3758903302915}}, u'location': {u'lat': 47.6795295, u'lng': -122.3745413}}, u'address_components': [{u'long_name': u'1413', u'types': [u'street_number'], u'short_name': u'1413'}, {u'long_name': u'Northwest 70th Street', u'types': [u'route'], u'short_name': u'NW 70th St'}, {u'long_name': u'Whittier Heights', u'types': [u'neighborhood', u'political'], u'short_name': u'Whittier Heights'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98117', u'types': [u'postal_code'], u'short_name': u'98117'}], u'partial_match': True, u'formatted_address': u'1413 Northwest 70th Street, Seattle, WA 98117, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,596][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,597][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Lots more canvases here and lots more sizes as well.', u'review_count': u'73', u'title': u'Artist & Craftsman Supply', u'rating_string': u'5.0', u'category_str_list': [u'Art Supplies'], u'link': u'/biz/artist-and-craftsman-supply-seattle', u'address': u'\n\t\t\t4350 8th Ave NESeattle, WA 98105\n\t\t', u'desc': u'Artist & Craftsman Supply', u'_id': ObjectId('524c04c4e291973e1136499c'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.66063459999999, u'lng': -122.3197601}, u'southwest': {u'lat': 47.66063459999999, u'lng': -122.3197786}}, u'viewport': {u'northeast': {u'lat': 47.66198358029149, u'lng': -122.3184203697085}, u'southwest': {u'lat': 47.65928561970849, u'lng': -122.3211183302915}}, u'location': {u'lat': 47.66063459999999, u'lng': -122.3197601}}, u'address_components': [{u'long_name': u'4350', u'types': [u'street_number'], u'short_name': u'4350'}, {u'long_name': u'8th Avenue Northeast', u'types': [u'route'], u'short_name': u'8th Ave NE'}, {u'long_name': u'Northeast Seattle', u'types': [u'neighborhood', u'political'], u'short_name': u'Northeast Seattle'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98105', u'types': [u'postal_code'], u'short_name': u'98105'}], u'formatted_address': u'4350 8th Avenue Northeast, Seattle, WA 98105, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,597][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,598][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The omakase was amazing and well worth the wait.', u'review_count': u'635', u'title': u"Shiro's", u'rating_string': u'4.5', u'category_str_list': [u'Sushi Bars', u'Japanese'], u'link': u'/biz/shiros-seattle', u'address': u'\n\t\t\t2401 2nd AveSeattle, WA 98121\n\t\t', u'desc': u"Shiro's", u'_id': ObjectId('524c04c4e291973e1136499d'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6147787, u'lng': -122.3473051}, u'viewport': {u'northeast': {u'lat': 47.61612768029149, u'lng': -122.3459561197085}, u'southwest': {u'lat': 47.61342971970849, u'lng': -122.3486540802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2401', u'types': [u'street_number'], u'short_name': u'2401'}, {u'long_name': u'2nd Avenue', u'types': [u'route'], u'short_name': u'2nd Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2401 2nd Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,599][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,599][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The Vivace latte was smooth from start to finish.', u'review_count': u'261', u'title': u'Espresso Vivace Alley 24', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea'], u'link': u'/biz/espresso-vivace-alley-24-seattle', u'address': u'\n\t\t\t227 Yale Ave NSeattle, WA 98109\n\t\t', u'desc': u'Espresso Vivace Alley 24', u'_id': ObjectId('524c04c4e291973e1136499e'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6201654, u'lng': -122.3305099}, u'viewport': {u'northeast': {u'lat': 47.62151438029149, u'lng': -122.3291609197085}, u'southwest': {u'lat': 47.6188164197085, u'lng': -122.3318588802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'227', u'types': [u'street_number'], u'short_name': u'227'}, {u'long_name': u'Yale Avenue North', u'types': [u'route'], u'short_name': u'Yale Ave N'}, {u'long_name': u'South-Lake Union', u'types': [u'neighborhood', u'political'], u'short_name': u'South-Lake Union'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98109', u'types': [u'postal_code'], u'short_name': u'98109'}], u'formatted_address': u'227 Yale Avenue North, Seattle, WA 98109, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,600][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,601][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Very flavorful beef w/ lots of whiz and tiny grilled onions.', u'review_count': u'289', u'title': u"Calozzi's", u'rating_string': u'4.5', u'category_str_list': [u'Cheesesteaks', u'Sandwiches'], u'link': u'/biz/calozzis-seattle', u'address': u'\n\t\t\t1306 4th AveSeattle, WA 98101\n\t\t', u'desc': u"Calozzi's", u'_id': ObjectId('524c04c4e291973e1136499f'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6083019, u'lng': -122.3349159}, u'southwest': {u'lat': 47.6082954, u'lng': -122.3349316}}, u'viewport': {u'northeast': {u'lat': 47.6096476302915, u'lng': -122.3335747697085}, u'southwest': {u'lat': 47.60694966970851, u'lng': -122.3362727302915}}, u'location': {u'lat': 47.6083019, u'lng': -122.3349159}}, u'address_components': [{u'long_name': u'1306', u'types': [u'street_number'], u'short_name': u'1306'}, {u'long_name': u'4th Avenue', u'types': [u'route'], u'short_name': u'4th Ave'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1306 4th Avenue, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,601][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,602][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'This cheesecake is sooo creamy and rich yet not at all heavy.', u'review_count': u'274', u'title': u'The Confectional', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries', u'Desserts'], u'link': u'/biz/the-confectional-seattle', u'address': u'\n\t\t\t1530 Pike PlSeattle, WA 98101\n\t\t', u'desc': u'The Confectional', u'_id': ObjectId('524c04c4e291973e113649a0'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.608802, u'lng': -122.3406884}, u'southwest': {u'lat': 47.6087926, u'lng': -122.3407005}}, u'viewport': {u'northeast': {u'lat': 47.6101462802915, u'lng': -122.3393454697085}, u'southwest': {u'lat': 47.6074483197085, u'lng': -122.3420434302915}}, u'location': {u'lat': 47.608802, u'lng': -122.3406884}}, u'address_components': [{u'long_name': u'1530', u'types': [u'street_number'], u'short_name': u'1530'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1530 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,602][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,603][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Like others, the cinnamon orange blend is to die for.', u'review_count': u'152', u'title': u'MarketSpice', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea', u'Herbs & Spices'], u'link': u'/biz/marketspice-seattle', u'address': u'\n\t\t\t85a Pike StSeattle, WA 98101\n\t\t', u'desc': u'MarketSpice', u'_id': ObjectId('524c04c4e291973e113649a1'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.60864979999999, u'lng': -122.3405887}, u'viewport': {u'northeast': {u'lat': 47.60999878029149, u'lng': -122.3392397197085}, u'southwest': {u'lat': 47.60730081970849, u'lng': -122.3419376802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'85', u'types': [u'street_number'], u'short_name': u'85'}, {u'long_name': u'Pike Street', u'types': [u'route'], u'short_name': u'Pike St'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'partial_match': True, u'formatted_address': u'85 Pike Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,603][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,604][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Everywhere you turn is another awesome map or globe.', u'review_count': u'67', u'title': u'Metsker Maps', u'rating_string': u'5.0', u'category_str_list': [u'Hobby Shops'], u'link': u'/biz/metsker-maps-seattle', u'address': u'\n\t\t\t1511 1st AveSeattle, WA 98101\n\t\t', u'desc': u'Metsker Maps', u'_id': ObjectId('524c04c4e291973e113649a2'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6092153, u'lng': -122.3405639}, u'viewport': {u'northeast': {u'lat': 47.6105642802915, u'lng': -122.3392149197085}, u'southwest': {u'lat': 47.6078663197085, u'lng': -122.3419128802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1511', u'types': [u'street_number'], u'short_name': u'1511'}, {u'long_name': u'1st Avenue', u'types': [u'route'], u'short_name': u'1st Ave'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1511 1st Avenue, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,604][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,605][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I saw Duck, Rabbit, Goat and great selection of sausages.', u'review_count': u'71', u'title': u"Bob's Quality Meats", u'rating_string': u'5.0', u'category_str_list': [u'Meat Shops', u'Butcher'], u'link': u'/biz/bobs-quality-meats-seattle', u'address': u'\n\t\t\t4861 Rainier Ave SSeattle, WA 98118\n\t\t', u'desc': u"Bob's Quality Meats", u'_id': ObjectId('524c04c4e291973e113649a3'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.5583101, u'lng': -122.2855765}, u'viewport': {u'northeast': {u'lat': 47.5596590802915, u'lng': -122.2842275197085}, u'southwest': {u'lat': 47.5569611197085, u'lng': -122.2869254802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'4861', u'types': [u'street_number'], u'short_name': u'4861'}, {u'long_name': u'Rainier Avenue South', u'types': [u'route'], u'short_name': u'Rainier Ave S'}, {u'long_name': u'Rainier Valley', u'types': [u'neighborhood', u'political'], u'short_name': u'Rainier Valley'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98118', u'types': [u'postal_code'], u'short_name': u'98118'}], u'partial_match': True, u'formatted_address': u'4861 Rainier Avenue South, Seattle, WA 98118, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,606][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,606][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I get an omakase every time, and it's always quite delicious.", u'review_count': u'366', u'title': u'Nishino', u'rating_string': u'4.5', u'category_str_list': [u'Sushi Bars', u'Japanese'], u'link': u'/biz/nishino-seattle', u'address': u'\n\t\t\t3130 E Madison StSeattle, WA 98112\n\t\t', u'desc': u'Nishino', u'_id': ObjectId('524c04c4e291973e113649a4'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.62687150000001, u'lng': -122.2918607}, u'viewport': {u'northeast': {u'lat': 47.62822048029151, u'lng': -122.2905117197085}, u'southwest': {u'lat': 47.62552251970851, u'lng': -122.2932096802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'3130', u'types': [u'street_number'], u'short_name': u'3130'}, {u'long_name': u'East Madison Street', u'types': [u'route'], u'short_name': u'E Madison St'}, {u'long_name': u'Washington Park', u'types': [u'neighborhood', u'political'], u'short_name': u'Washington Park'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98112', u'types': [u'postal_code'], u'short_name': u'98112'}], u'formatted_address': u'3130 East Madison Street, Seattle, WA 98112, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,607][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,607][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Tajarin with butter and sage sauce - DELICIOUS.', u'review_count': u'424', u'title': u'Cascina Spinasse', u'rating_string': u'4.5', u'category_str_list': [u'Italian'], u'link': u'/biz/cascina-spinasse-seattle', u'address': u'\n\t\t\t1531 14th AveSeattle, WA 98122\n\t\t', u'desc': u'Cascina Spinasse', u'_id': ObjectId('524c04c4e291973e113649a5'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.614642, u'lng': -122.3142345}, u'southwest': {u'lat': 47.6146419, u'lng': -122.3142529}}, u'viewport': {u'northeast': {u'lat': 47.6159909302915, u'lng': -122.3128947197085}, u'southwest': {u'lat': 47.6132929697085, u'lng': -122.3155926802915}}, u'location': {u'lat': 47.6146419, u'lng': -122.3142529}}, u'address_components': [{u'long_name': u'1531', u'types': [u'street_number'], u'short_name': u'1531'}, {u'long_name': u'14th Avenue', u'types': [u'route'], u'short_name': u'14th Ave'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'1531 14th Avenue, Seattle, WA 98122, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,608][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,608][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'i added the non-alcoholic paring to the menu.', u'review_count': u'176', u'title': u'Sutra', u'rating_string': u'4.5', u'category_str_list': [u'Vegetarian', u'Vegan'], u'link': u'/biz/sutra-seattle-2', u'address': u'\n\t\t\t1605 N 45th StSeattle, WA 98103\n\t\t', u'desc': u'Sutra', u'_id': ObjectId('524c04c4e291973e113649a6'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6612559, u'lng': -122.3382522}, u'viewport': {u'northeast': {u'lat': 47.6626048802915, u'lng': -122.3369032197085}, u'southwest': {u'lat': 47.6599069197085, u'lng': -122.3396011802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1605', u'types': [u'street_number'], u'short_name': u'1605'}, {u'long_name': u'North 45th Street', u'types': [u'route'], u'short_name': u'N 45th St'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'1605 North 45th Street, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,609][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,610][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The slow bar is a fairly unique experience in this city, and they...', u'review_count': u'329', u'title': u'Seattle Coffee Works', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea', u'Sandwiches'], u'link': u'/biz/seattle-coffee-works-seattle', u'address': u'\n\t\t\t107 Pike StSeattle, WA 98101\n\t\t', u'desc': u'Seattle Coffee Works', u'_id': ObjectId('524c04c4e291973e113649a7'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6089195, u'lng': -122.3394157}, u'viewport': {u'northeast': {u'lat': 47.6102684802915, u'lng': -122.3380667197085}, u'southwest': {u'lat': 47.6075705197085, u'lng': -122.3407646802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'107', u'types': [u'street_number'], u'short_name': u'107'}, {u'long_name': u'Pike Street', u'types': [u'route'], u'short_name': u'Pike St'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'107 Pike Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,610][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,611][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Intimate and romantic setting with more seating downstairs.', u'review_count': u'298', u'title': u'The Harvest Vine', u'rating_string': u'4.5', u'category_str_list': [u'Tapas Bars', u'Spanish', u'Basque'], u'link': u'/biz/the-harvest-vine-seattle', u'address': u'\n\t\t\t2701 E Madison StSeattle, WA 98112\n\t\t', u'desc': u'The Harvest Vine', u'_id': ObjectId('524c04c4e291973e113649a8'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6224265, u'lng': -122.297047}, u'viewport': {u'northeast': {u'lat': 47.6237754802915, u'lng': -122.2956980197085}, u'southwest': {u'lat': 47.6210775197085, u'lng': -122.2983959802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2701', u'types': [u'street_number'], u'short_name': u'2701'}, {u'long_name': u'East Madison Street', u'types': [u'route'], u'short_name': u'E Madison St'}, {u'long_name': u'Mann', u'types': [u'neighborhood', u'political'], u'short_name': u'Mann'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98112', u'types': [u'postal_code'], u'short_name': u'98112'}], u'formatted_address': u'2701 East Madison Street, Seattle, WA 98112, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,611][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,612][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The pasta is prepared perfectly, just slight al dente.', u'review_count': u'153', u'title': u'Il Corvo Pasta', u'rating_string': u'4.5', u'category_str_list': [u'Italian'], u'link': u'/biz/il-corvo-pasta-seattle', u'address': u'\n\t\t\t217 James St.Seattle, WA 98104\n\t\t', u'desc': u'Il Corvo Pasta', u'_id': ObjectId('524c04c4e291973e113649a9'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6025146, u'lng': -122.331739}, u'viewport': {u'northeast': {u'lat': 47.6038635802915, u'lng': -122.3303900197085}, u'southwest': {u'lat': 47.6011656197085, u'lng': -122.3330879802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'217', u'types': [u'street_number'], u'short_name': u'217'}, {u'long_name': u'James Street', u'types': [u'route'], u'short_name': u'James St'}, {u'long_name': u'Pioneer Square', u'types': [u'neighborhood', u'political'], u'short_name': u'Pioneer Square'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'formatted_address': u'217 James Street, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,612][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,613][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The Fremont troll is a must-see for anyone living in Seattle.', u'review_count': u'322', u'title': u'The Fremont Troll', u'rating_string': u'4.5', u'category_str_list': [u'Landmarks & Historical Buildings'], u'link': u'/biz/the-fremont-troll-seattle', u'address': u'\n\t\t\tNorth Troll AveSeattle, WA 98103\n\t\t', u'desc': u'The Fremont Troll', u'_id': ObjectId('524c04c4e291973e113649aa'), u'price_range': 0, u'google_geometry': [{u'geometry': {u'location_type': u'GEOMETRIC_CENTER', u'bounds': {u'northeast': {u'lat': 47.650953, u'lng': -122.3468761}, u'southwest': {u'lat': 47.6484429, u'lng': -122.3476466}}, u'viewport': {u'northeast': {u'lat': 47.6510469302915, u'lng': -122.3459123697085}, u'southwest': {u'lat': 47.64834896970851, u'lng': -122.3486103302915}}, u'location': {u'lat': 47.64968229999999, u'lng': -122.3473664}}, u'address_components': [{u'long_name': u'Troll Avenue North', u'types': [u'route'], u'short_name': u'Troll Ave N'}, {u'long_name': u'Fremont', u'types': [u'neighborhood', u'political'], u'short_name': u'Fremont'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'partial_match': True, u'formatted_address': u'Troll Avenue North, Seattle, WA 98103, USA', u'types': [u'route']}]}
[2015-03-18 16:39:32,613][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,614][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Vintage arcade games + delicious home made ice cream.', u'review_count': u'165', u'title': u'Full Tilt Ice Cream', u'rating_string': u'4.5', u'category_str_list': [u'Ice Cream & Frozen Yogurt', u'Arcades'], u'link': u'/biz/full-tilt-ice-cream-seattle-4', u'address': u'\n\t\t\t5041 Rainier Ave SSeattle, WA 98118\n\t\t', u'desc': u'Full Tilt Ice Cream', u'_id': ObjectId('524c04c4e291973e113649ab'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.556039, u'lng': -122.2841428}, u'viewport': {u'northeast': {u'lat': 47.55738798029149, u'lng': -122.2827938197085}, u'southwest': {u'lat': 47.5546900197085, u'lng': -122.2854917802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'5041', u'types': [u'street_number'], u'short_name': u'5041'}, {u'long_name': u'Rainier Avenue South', u'types': [u'route'], u'short_name': u'Rainier Ave S'}, {u'long_name': u'Rainier Valley', u'types': [u'neighborhood', u'political'], u'short_name': u'Rainier Valley'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98118', u'types': [u'postal_code'], u'short_name': u'98118'}], u'partial_match': True, u'formatted_address': u'5041 Rainier Avenue South, Seattle, WA 98118, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,615][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,615][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'This is my personnel favorite board game store in Seattle.', u'review_count': u'67', u'title': u'Blue Highway Games', u'rating_string': u'4.5', u'category_str_list': [u'Hobby Shops', u'Toy Stores'], u'link': u'/biz/blue-highway-games-seattle', u'address': u'\n\t\t\t2203 Queen Anne Ave NSeattle, WA 98109\n\t\t', u'desc': u'Blue Highway Games', u'_id': ObjectId('524c04c4e291973e113649ac'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.63858399999999, u'lng': -122.3571098}, u'viewport': {u'northeast': {u'lat': 47.63993298029149, u'lng': -122.3557608197085}, u'southwest': {u'lat': 47.63723501970849, u'lng': -122.3584587802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2203', u'types': [u'street_number'], u'short_name': u'2203'}, {u'long_name': u'Queen Anne Avenue North', u'types': [u'route'], u'short_name': u'Queen Anne Ave N'}, {u'long_name': u'Queen Anne', u'types': [u'neighborhood', u'political'], u'short_name': u'Queen Anne'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98109', u'types': [u'postal_code'], u'short_name': u'98109'}], u'formatted_address': u'2203 Queen Anne Avenue North, Seattle, WA 98109, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,616][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,616][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Make sure you try the AMAZING BANANAS FOSTER.', u'review_count': u'553', u'title': u'El Gaucho', u'rating_string': u'4.5', u'category_str_list': [u'Steakhouses'], u'link': u'/biz/el-gaucho-seattle', u'address': u'\n\t\t\t2505 1st AveSeattle, WA 98121\n\t\t', u'desc': u'El Gaucho', u'_id': ObjectId('524c04c4e291973e113649ad'), u'price_range': 4, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6147487, u'lng': -122.3491142}, u'viewport': {u'northeast': {u'lat': 47.6160976802915, u'lng': -122.3477652197085}, u'southwest': {u'lat': 47.6133997197085, u'lng': -122.3504631802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2505', u'types': [u'street_number'], u'short_name': u'2505'}, {u'long_name': u'1st Avenue', u'types': [u'route'], u'short_name': u'1st Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2505 1st Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,617][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,618][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'You are about six blocks directly north of Pike Place Market.', u'review_count': u'171', u'title': u'Grand Hyatt Seattle', u'rating_string': u'4.5', u'category_str_list': [u'Hotels'], u'link': u'/biz/grand-hyatt-seattle-seattle', u'address': u'\n\t\t\t721 Pine StSeattle, WA 98101\n\t\t', u'desc': u'Grand Hyatt Seattle', u'_id': ObjectId('524c04c4e291973e113649ae'), u'price_range': 3, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.61233780000001, u'lng': -122.3332601}, u'viewport': {u'northeast': {u'lat': 47.61368678029151, u'lng': -122.3319111197085}, u'southwest': {u'lat': 47.61098881970851, u'lng': -122.3346090802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'721', u'types': [u'street_number'], u'short_name': u'721'}, {u'long_name': u'Pine Street', u'types': [u'route'], u'short_name': u'Pine St'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'721 Pine Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,618][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,619][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'But Michael will let you test try all his wonderful flavors.', u'review_count': u'93', u'title': u'Lick Pure Cream', u'rating_string': u'4.5', u'category_str_list': [u'Ice Cream & Frozen Yogurt'], u'link': u'/biz/lick-pure-cream-seattle', u'address': u'\n\t\t\t1424 E Pine StSeattle, WA 98122\n\t\t', u'desc': u'Lick Pure Cream', u'_id': ObjectId('524c04c4e291973e113649af'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.61551559999999, u'lng': -122.3131179}, u'viewport': {u'northeast': {u'lat': 47.6168645802915, u'lng': -122.3117689197085}, u'southwest': {u'lat': 47.6141666197085, u'lng': -122.3144668802915}}, u'location_type': u'APPROXIMATE'}, u'address_components': [{u'long_name': u'1424', u'types': [u'street_number'], u'short_name': u'1424'}, {u'long_name': u'East Pine Street', u'types': [u'route'], u'short_name': u'E Pine St'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'1424 East Pine Street, Seattle, WA 98122, USA', u'types': [u'subpremise']}]}
[2015-03-18 16:39:32,619][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,620][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I love love love the Banh Mi Ga (chicken) and Banh Mi Heo (pork.', u'review_count': u'311', u'title': u'Saigon Deli', u'rating_string': u'4.5', u'category_str_list': [u'Vietnamese', u'Delis', u'Sandwiches'], u'link': u'/biz/saigon-deli-seattle', u'address': u'\n\t\t\t1237 S Jackson StSeattle, WA 98144\n\t\t', u'desc': u'Saigon Deli', u'_id': ObjectId('524c04c4e291973e113649b0'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.5989286, u'lng': -122.315445}, u'viewport': {u'northeast': {u'lat': 47.6002775802915, u'lng': -122.3140960197085}, u'southwest': {u'lat': 47.5975796197085, u'lng': -122.3167939802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1237', u'types': [u'street_number'], u'short_name': u'1237'}, {u'long_name': u'South Jackson Street', u'types': [u'route'], u'short_name': u'S Jackson St'}, {u'long_name': u'Downtown', u'types': [u'neighborhood', u'political'], u'short_name': u'Downtown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98144', u'types': [u'postal_code'], u'short_name': u'98144'}], u'formatted_address': u'1237 South Jackson Street, Seattle, WA 98144, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,620][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,621][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The Mexican Mocha was amazing too.', u'review_count': u'72', u'title': u'Moore Coffee Shop', u'rating_string': u'5.0', u'category_str_list': [u'Coffee & Tea'], u'link': u'/biz/moore-coffee-shop-seattle', u'address': u'\n\t\t\t1930 2nd AveSeattle, WA 98101\n\t\t', u'desc': u'Moore Coffee Shop', u'_id': ObjectId('524c04c4e291973e113649b1'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6112116, u'lng': -122.340829}, u'southwest': {u'lat': 47.6112024, u'lng': -122.3408414}}, u'viewport': {u'northeast': {u'lat': 47.6125559802915, u'lng': -122.3394862197085}, u'southwest': {u'lat': 47.6098580197085, u'lng': -122.3421841802915}}, u'location': {u'lat': 47.6112116, u'lng': -122.340829}}, u'address_components': [{u'long_name': u'1930', u'types': [u'street_number'], u'short_name': u'1930'}, {u'long_name': u'2nd Avenue', u'types': [u'route'], u'short_name': u'2nd Ave'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1930 2nd Avenue, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,621][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,622][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The carne asada and pollo are all solid winners.', u'review_count': u'204', u'title': u'Tacos Chukis', u'rating_string': u'4.5', u'category_str_list': [u'Mexican'], u'link': u'/biz/tacos-chukis-seattle', u'address': u'\n\t\t\t219 Broadway ESeattle, WA 98102\n\t\t', u'desc': u'Tacos Chukis', u'_id': ObjectId('524c04c4e291973e113649b2'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.620581, u'lng': -122.3211624}, u'viewport': {u'northeast': {u'lat': 47.6219299802915, u'lng': -122.3198134197085}, u'southwest': {u'lat': 47.61923201970851, u'lng': -122.3225113802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'219', u'types': [u'street_number'], u'short_name': u'219'}, {u'long_name': u'Broadway East', u'types': [u'route'], u'short_name': u'Broadway E'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98102', u'types': [u'postal_code'], u'short_name': u'98102'}], u'formatted_address': u'219 Broadway East, Seattle, WA 98102, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,623][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,623][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Hummus for appetizer - Excellent choice to start off the meal.', u'review_count': u'321', u'title': u'Petra Mediterranean Bistro', u'rating_string': u'4.5', u'category_str_list': [u'Mediterranean', u'Middle Eastern', u'Greek'], u'link': u'/biz/petra-mediterranean-bistro-seattle', u'address': u'\n\t\t\t2501 4th AveSeattle, WA 98121\n\t\t', u'desc': u'Petra Mediterranean Bistro', u'_id': ObjectId('524c04c4e291973e113649b3'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6166554, u'lng': -122.3464675}, u'viewport': {u'northeast': {u'lat': 47.6180043802915, u'lng': -122.3451185197085}, u'southwest': {u'lat': 47.6153064197085, u'lng': -122.3478164802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2501', u'types': [u'street_number'], u'short_name': u'2501'}, {u'long_name': u'4th Avenue', u'types': [u'route'], u'short_name': u'4th Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2501 4th Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,624][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,624][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'roasted chanterelle mushrooms, truffle cheese: DELICIOUS.', u'review_count': u'1867', u'title': u'Serious Pie', u'rating_string': u'4.0', u'category_str_list': [u'Pizza'], u'link': u'/biz/serious-pie-seattle', u'address': u'\n\t\t\t316 Virginia StSeattle, WA 98121\n\t\t', u'desc': u'Serious Pie', u'_id': ObjectId('524c04c4e291973e113649b4'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6125127, u'lng': -122.340746}, u'southwest': {u'lat': 47.6125046, u'lng': -122.3407601}}, u'viewport': {u'northeast': {u'lat': 47.61385763029149, u'lng': -122.3394040697085}, u'southwest': {u'lat': 47.6111596697085, u'lng': -122.3421020302915}}, u'location': {u'lat': 47.6125127, u'lng': -122.3407601}}, u'address_components': [{u'long_name': u'316', u'types': [u'street_number'], u'short_name': u'316'}, {u'long_name': u'Virginia Street', u'types': [u'route'], u'short_name': u'Virginia St'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'partial_match': True, u'formatted_address': u'316 Virginia Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,625][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,625][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Oh and dont forget to try the fresh spring rolls with shrimp.', u'review_count': u'712', u'title': u'Green Leaf Vietnamese Restaurant', u'rating_string': u'4.0', u'category_str_list': [u'Vietnamese'], u'link': u'/biz/green-leaf-vietnamese-restaurant-seattle', u'address': u'\n\t\t\t418 8th Ave SSeattle, WA 98104\n\t\t', u'desc': u'Green Leaf Vietnamese Restaurant', u'_id': ObjectId('524c04c4e291973e113649b5'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6035788, u'lng': -122.3247599}, u'southwest': {u'lat': 47.6035724, u'lng': -122.3247757}}, u'viewport': {u'northeast': {u'lat': 47.6049245802915, u'lng': -122.3234188197085}, u'southwest': {u'lat': 47.6022266197085, u'lng': -122.3261167802915}}, u'location': {u'lat': 47.6035788, u'lng': -122.3247599}}, u'address_components': [{u'long_name': u'418', u'types': [u'street_number'], u'short_name': u'418'}, {u'long_name': u'8th Avenue', u'types': [u'route'], u'short_name': u'8th Ave'}, {u'long_name': u'Downtown', u'types': [u'neighborhood', u'political'], u'short_name': u'Downtown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'partial_match': True, u'formatted_address': u'418 8th Avenue, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,626][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,627][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'They were all delicious cheeses and made for a great picnic.', u'review_count': u'52', u'title': u'The Calf and Kid', u'rating_string': u'5.0', u'category_str_list': [u'Cheese Shops'], u'link': u'/biz/the-calf-and-kid-seattle', u'address': u'\n\t\t\t1531 Melrose AveSeattle, WA 98101\n\t\t', u'desc': u'The Calf and Kid', u'_id': ObjectId('524c04c4e291973e113649b6'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6147696, u'lng': -122.3280421}, u'viewport': {u'northeast': {u'lat': 47.6161185802915, u'lng': -122.3266931197085}, u'southwest': {u'lat': 47.6134206197085, u'lng': -122.3293910802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1531', u'types': [u'street_number'], u'short_name': u'1531'}, {u'long_name': u'Melrose Avenue', u'types': [u'route'], u'short_name': u'Melrose Ave'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1531 Melrose Avenue, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,627][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,628][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I highly recommend the Casanova Roll and the Bad boy roll.', u'review_count': u'1626', u'title': u'Umi Sake House', u'rating_string': u'4.0', u'category_str_list': [u'Sushi Bars', u'Japanese'], u'link': u'/biz/umi-sake-house-seattle', u'address': u'\n\t\t\t2230 1st AveSeattle, WA 98121\n\t\t', u'desc': u'Umi Sake House', u'_id': ObjectId('524c04c4e291973e113649b7'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6133347, u'lng': -122.3460801}, u'viewport': {u'northeast': {u'lat': 47.6146836802915, u'lng': -122.3447311197085}, u'southwest': {u'lat': 47.6119857197085, u'lng': -122.3474290802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2230', u'types': [u'street_number'], u'short_name': u'2230'}, {u'long_name': u'1st Avenue', u'types': [u'route'], u'short_name': u'1st Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2230 1st Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,628][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,629][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"Shorty's is hands down the best pinball hall in the city.", u'review_count': u'410', u'title': u"Shorty's", u'rating_string': u'4.0', u'category_str_list': [u'Dive Bars', u'Arcades'], u'link': u'/biz/shortys-seattle', u'address': u'\n\t\t\t2222 2nd AveSeattle, WA 98121\n\t\t', u'desc': u"Shorty's", u'_id': ObjectId('524c04c4e291973e113649b8'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6138213, u'lng': -122.3450055}, u'viewport': {u'northeast': {u'lat': 47.61517028029149, u'lng': -122.3436565197085}, u'southwest': {u'lat': 47.61247231970849, u'lng': -122.3463544802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2222', u'types': [u'street_number'], u'short_name': u'2222'}, {u'long_name': u'2nd Avenue', u'types': [u'route'], u'short_name': u'2nd Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2222 2nd Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,629][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,630][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'But they have huge selection of great sausages at great price.', u'review_count': u'126', u'title': u"Uli's Famous Sausage", u'rating_string': u'4.5', u'category_str_list': [u'Meat Shops', u'German', u'Sandwiches'], u'link': u'/biz/ulis-famous-sausage-seattle', u'address': u'\n\t\t\t1511 Pike PlSeattle, WA 98101\n\t\t', u'desc': u"Uli's Famous Sausage", u'_id': ObjectId('524c04c4e291973e113649b9'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6087978, u'lng': -122.3407093}, u'southwest': {u'lat': 47.6087884, u'lng': -122.3407214}}, u'viewport': {u'northeast': {u'lat': 47.6101420802915, u'lng': -122.3393663697085}, u'southwest': {u'lat': 47.6074441197085, u'lng': -122.3420643302915}}, u'location': {u'lat': 47.6087884, u'lng': -122.3407214}}, u'address_components': [{u'long_name': u'1511', u'types': [u'street_number'], u'short_name': u'1511'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1511 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,630][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,631][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Cool exhibits, Cool old school paintings, a variety of genre.', u'review_count': u'108', u'title': u'Frye Art Museum', u'rating_string': u'4.5', u'category_str_list': [u'Museums', u'Art Galleries'], u'link': u'/biz/frye-art-museum-seattle', u'address': u'\n\t\t\t704 Terry AveSeattle, WA 98104\n\t\t', u'desc': u'Frye Art Museum', u'_id': ObjectId('524c04c4e291973e113649ba'), u'price_range': 0, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.607082, u'lng': -122.324173}, u'viewport': {u'northeast': {u'lat': 47.60843098029149, u'lng': -122.3228240197085}, u'southwest': {u'lat': 47.6057330197085, u'lng': -122.3255219802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'704', u'types': [u'street_number'], u'short_name': u'704'}, {u'long_name': u'Terry Avenue', u'types': [u'route'], u'short_name': u'Terry Ave'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'formatted_address': u'704 Terry Avenue, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,631][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,632][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The Nutella and Salted Caramel are really great too.', u'review_count': u'348', u'title': u'Fainting Goat Gelato', u'rating_string': u'4.5', u'category_str_list': [u'Ice Cream & Frozen Yogurt', u'Gelato', u'Coffee & Tea'], u'link': u'/biz/fainting-goat-gelato-seattle', u'address': u'\n\t\t\t1903 N 45th StSeattle, WA 98103\n\t\t', u'desc': u'Fainting Goat Gelato', u'_id': ObjectId('524c04c4e291973e113649bb'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6612987, u'lng': -122.3347515}, u'viewport': {u'northeast': {u'lat': 47.66264768029149, u'lng': -122.3334025197085}, u'southwest': {u'lat': 47.6599497197085, u'lng': -122.3361004802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1903', u'types': [u'street_number'], u'short_name': u'1903'}, {u'long_name': u'North 45th Street', u'types': [u'route'], u'short_name': u'N 45th St'}, {u'long_name': u'Wallingford', u'types': [u'neighborhood', u'political'], u'short_name': u'Wallingford'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'1903 North 45th Street, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,633][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,633][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Rachel the Pig is easily the coolest piggy bank in the world.', u'review_count': u'86', u'title': u'Rachel the Pig @ Pike Place Market', u'rating_string': u'4.5', u'category_str_list': [u'Local Flavor', u'Landmarks & Historical Buildings'], u'link': u'/biz/rachel-the-pig-pike-place-market-seattle', u'address': u'\n\t\t\t85 Pike StSeattle, WA 98101\n\t\t', u'desc': u'Rachel the Pig @ Pike Place Market', u'_id': ObjectId('524c04c4e291973e113649bc'), u'price_range': 0, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.60864979999999, u'lng': -122.3405887}, u'viewport': {u'northeast': {u'lat': 47.60999878029149, u'lng': -122.3392397197085}, u'southwest': {u'lat': 47.60730081970849, u'lng': -122.3419376802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'85', u'types': [u'street_number'], u'short_name': u'85'}, {u'long_name': u'Pike Street', u'types': [u'route'], u'short_name': u'Pike St'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'85 Pike Street, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,634][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,634][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The injera is made fresh every day, and it comes with your order.', u'review_count': u'111', u'title': u'Altaye Ethiopian Restaurant', u'rating_string': u'4.5', u'category_str_list': [u'Ethiopian'], u'link': u'/biz/altaye-ethiopian-restaurant-seattle', u'address': u'\n\t\t\t8135 Rainier Ave SSeattle, WA 98118\n\t\t', u'desc': u'Altaye Ethiopian Restaurant', u'_id': ObjectId('524c04c4e291973e113649bd'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.529378, u'lng': -122.2701914}, u'viewport': {u'northeast': {u'lat': 47.5307269802915, u'lng': -122.2688424197085}, u'southwest': {u'lat': 47.52802901970851, u'lng': -122.2715403802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'8135', u'types': [u'street_number'], u'short_name': u'8135'}, {u'long_name': u'Rainier Avenue South', u'types': [u'route'], u'short_name': u'Rainier Ave S'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98118', u'types': [u'postal_code'], u'short_name': u'98118'}], u'partial_match': True, u'formatted_address': u'8135 Rainier Avenue South, Seattle, WA 98118, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,635][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,635][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Love the fact that the tasting menu is SO flexible.', u'review_count': u'164', u'title': u'Altura', u'rating_string': u'4.5', u'category_str_list': [u'Italian'], u'link': u'/biz/altura-seattle', u'address': u'\n\t\t\t617 Broadway ESeattle, WA 98102\n\t\t', u'desc': u'Altura', u'_id': ObjectId('524c04c4e291973e113649be'), u'price_range': 4, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6244092, u'lng': -122.3209436}, u'southwest': {u'lat': 47.6244091, u'lng': -122.320962}}, u'viewport': {u'northeast': {u'lat': 47.6257581302915, u'lng': -122.3196038197085}, u'southwest': {u'lat': 47.6230601697085, u'lng': -122.3223017802915}}, u'location': {u'lat': 47.6244092, u'lng': -122.320962}}, u'address_components': [{u'long_name': u'617', u'types': [u'street_number'], u'short_name': u'617'}, {u'long_name': u'Broadway East', u'types': [u'route'], u'short_name': u'Broadway E'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98102', u'types': [u'postal_code'], u'short_name': u'98102'}], u'formatted_address': u'617 Broadway East, Seattle, WA 98102, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,636][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,637][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Open late, awesome and friendly staff, and a great gyro.', u'review_count': u'209', u'title': u'Aladdin Falafel Corner', u'rating_string': u'4.5', u'category_str_list': [u'Middle Eastern'], u'link': u'/biz/aladdin-falafel-corner-seattle-2', u'address': u'\n\t\t\t4541 University Way NESeattle, WA 98105\n\t\t', u'desc': u'Aladdin Falafel Corner', u'_id': ObjectId('524c04c4e291973e113649bf'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6625329, u'lng': -122.3131057}, u'southwest': {u'lat': 47.6625328, u'lng': -122.3131242}}, u'viewport': {u'northeast': {u'lat': 47.6638818302915, u'lng': -122.3117659697085}, u'southwest': {u'lat': 47.6611838697085, u'lng': -122.3144639302915}}, u'location': {u'lat': 47.6625329, u'lng': -122.3131242}}, u'address_components': [{u'long_name': u'4541', u'types': [u'street_number'], u'short_name': u'4541'}, {u'long_name': u'University Way Northeast', u'types': [u'route'], u'short_name': u'University Way NE'}, {u'long_name': u'Northeast Seattle', u'types': [u'neighborhood', u'political'], u'short_name': u'Northeast Seattle'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98105', u'types': [u'postal_code'], u'short_name': u'98105'}], u'formatted_address': u'4541 University Way Northeast, Seattle, WA 98105, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,637][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,638][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"I haven't been up the Space Needle, so can't compare.", u'review_count': u'103', u'title': u'Columbia Center Observation Deck', u'rating_string': u'4.5', u'category_str_list': [u'Landmarks & Historical Buildings'], u'link': u'/biz/columbia-center-observation-deck-seattle-3', u'address': u'\n\t\t\t701 5th AveSeattle, WA 98104\n\t\t', u'desc': u'Columbia Center Observation Deck', u'_id': ObjectId('524c04c4e291973e113649c0'), u'price_range': 0, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.60481679999999, u'lng': -122.330568}, u'viewport': {u'northeast': {u'lat': 47.6061657802915, u'lng': -122.3292190197085}, u'southwest': {u'lat': 47.6034678197085, u'lng': -122.3319169802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'701', u'types': [u'street_number'], u'short_name': u'701'}, {u'long_name': u'5th Avenue', u'types': [u'route'], u'short_name': u'5th Ave'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98104', u'types': [u'postal_code'], u'short_name': u'98104'}], u'formatted_address': u'701 5th Avenue, Seattle, WA 98104, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,638][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,639][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Consistently awesome drinks, great cause (and the latte art is always...', u'review_count': u'77', u'title': u'Street Bean Espresso', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea'], u'link': u'/biz/street-bean-espresso-seattle', u'address': u'\n\t\t\t2702 3rd AveSeattle, WA 98121\n\t\t', u'desc': u'Street Bean Espresso', u'_id': ObjectId('524c04c4e291973e113649c1'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6174076, u'lng': -122.3490521}, u'viewport': {u'northeast': {u'lat': 47.6187565802915, u'lng': -122.3477031197085}, u'southwest': {u'lat': 47.6160586197085, u'lng': -122.3504010802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2702', u'types': [u'street_number'], u'short_name': u'2702'}, {u'long_name': u'3rd Avenue', u'types': [u'route'], u'short_name': u'3rd Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2702 3rd Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,639][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,640][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Who ever heard of "wild boar sloppy joe & crispy sage leaves.', u'review_count': u'852', u'title': u"Quinn's", u'rating_string': u'4.0', u'category_str_list': [u'American (New)', u'Pubs'], u'link': u'/biz/quinns-seattle', u'address': u'\n\t\t\t1001 E Pike StSeattle, WA 98122\n\t\t', u'desc': u"Quinn's", u'_id': ObjectId('524c04c4e291973e113649c2'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.61386, u'lng': -122.319222}, u'viewport': {u'northeast': {u'lat': 47.6152089802915, u'lng': -122.3178730197085}, u'southwest': {u'lat': 47.6125110197085, u'lng': -122.3205709802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1001', u'types': [u'street_number'], u'short_name': u'1001'}, {u'long_name': u'East Pike Street', u'types': [u'route'], u'short_name': u'E Pike St'}, {u'long_name': u'Pike/Pine', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike/Pine'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'1001 East Pike Street, Seattle, WA 98122, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,640][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,641][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Nothing but great experiences so far!', u'review_count': u'46', u'title': u'Envy On Alki Skin Boutique', u'rating_string': u'5.0', u'category_str_list': [u'Skin Care'], u'link': u'/biz/envy-on-alki-skin-boutique-seattle-2', u'address': u'\n\t\t\t2613 58th Ave SWSeattle, WA 98116\n\t\t', u'desc': u'Envy On Alki Skin Boutique', u'_id': ObjectId('524c04c4e291973e113649c3'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.580251, u'lng': -122.4061644}, u'southwest': {u'lat': 47.58025079999999, u'lng': -122.4061828}}, u'viewport': {u'northeast': {u'lat': 47.58159988029149, u'lng': -122.4048246197085}, u'southwest': {u'lat': 47.57890191970849, u'lng': -122.4075225802915}}, u'location': {u'lat': 47.580251, u'lng': -122.4061828}}, u'address_components': [{u'long_name': u'2613', u'types': [u'street_number'], u'short_name': u'2613'}, {u'long_name': u'58th Avenue Southwest', u'types': [u'route'], u'short_name': u'58th Ave SW'}, {u'long_name': u'Alki', u'types': [u'neighborhood', u'political'], u'short_name': u'Alki'}, {u'long_name': u'West Seattle', u'types': [u'sublocality', u'political'], u'short_name': u'West Seattle'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98116', u'types': [u'postal_code'], u'short_name': u'98116'}], u'formatted_address': u'2613 58th Avenue Southwest, Seattle, WA 98116, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,641][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,642][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Some ponzu would have made the geoduck next level eating.', u'review_count': u'225', u'title': u'Taylor Shellfish Farms', u'rating_string': u'4.5', u'category_str_list': [u'Seafood Markets', u'Seafood', u'Live/Raw Food'], u'link': u'/biz/taylor-shellfish-farms-seattle', u'address': u'\n\t\t\t1521 Melrose AveSeattle, WA 98122\n\t\t', u'desc': u'Taylor Shellfish Farms', u'_id': ObjectId('524c04c4e291973e113649c4'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6146734, u'lng': -122.3281469}, u'viewport': {u'northeast': {u'lat': 47.6160223802915, u'lng': -122.3267979197085}, u'southwest': {u'lat': 47.6133244197085, u'lng': -122.3294958802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1521', u'types': [u'street_number'], u'short_name': u'1521'}, {u'long_name': u'Melrose Avenue', u'types': [u'route'], u'short_name': u'Melrose Ave'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'1521 Melrose Avenue, Seattle, WA 98122, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,643][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,643][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The trapeze artist makes the evening just zany enough.', u'review_count': u'1066', u'title': u'The Pink Door', u'rating_string': u'4.0', u'category_str_list': [u'Italian'], u'link': u'/biz/the-pink-door-seattle', u'address': u'\n\t\t\t1919 Post AlleySeattle, WA 98101\n\t\t', u'desc': u'The Pink Door', u'_id': ObjectId('524c04c4e291973e113649c5'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6103675, u'lng': -122.3424233}, u'southwest': {u'lat': 47.6103582, u'lng': -122.3424354}}, u'viewport': {u'northeast': {u'lat': 47.6117118302915, u'lng': -122.3410803697085}, u'southwest': {u'lat': 47.60901386970851, u'lng': -122.3437783302915}}, u'location': {u'lat': 47.6103582, u'lng': -122.3424354}}, u'address_components': [{u'long_name': u'1919', u'types': [u'street_number'], u'short_name': u'1919'}, {u'long_name': u'Post Alley', u'types': [u'route'], u'short_name': u'Post Alley'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1919 Post Alley, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,644][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,644][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I love love love the coconut cream pie at Palace Kitchen.', u'review_count': u'360', u'title': u'Dahlia Bakery', u'rating_string': u'4.0', u'category_str_list': [u'Bakeries', u'Donuts', u'Sandwiches'], u'link': u'/biz/dahlia-bakery-seattle', u'address': u'\n\t\t\t2001 4th AveSeattle, WA 98121\n\t\t', u'desc': u'Dahlia Bakery', u'_id': ObjectId('524c04c4e291973e113649c6'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.61305050000001, u'lng': -122.3402926}, u'viewport': {u'northeast': {u'lat': 47.61439948029151, u'lng': -122.3389436197085}, u'southwest': {u'lat': 47.61170151970851, u'lng': -122.3416415802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2001', u'types': [u'street_number'], u'short_name': u'2001'}, {u'long_name': u'4th Avenue', u'types': [u'route'], u'short_name': u'4th Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2001 4th Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,645][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,646][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'This little gem has the best sausages in town.', u'review_count': u'111', u'title': u'Bavarian Meats', u'rating_string': u'4.5', u'category_str_list': [u'Delis', u'German'], u'link': u'/biz/bavarian-meats-seattle', u'address': u'\n\t\t\t1920 Pike PlSeattle, WA 98101\n\t\t', u'desc': u'Bavarian Meats', u'_id': ObjectId('524c04c4e291973e113649c7'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.61019330000001, u'lng': -122.3428656}, u'viewport': {u'northeast': {u'lat': 47.61154228029151, u'lng': -122.3415166197085}, u'southwest': {u'lat': 47.60884431970851, u'lng': -122.3442145802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1920', u'types': [u'street_number'], u'short_name': u'1920'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1920 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,646][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,647][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'She opened my eyes to amazing greek food and tom douglas.', u'review_count': u'1266', u'title': u'Lola', u'rating_string': u'4.0', u'category_str_list': [u'Greek', u'Mediterranean', u'Breakfast & Brunch'], u'link': u'/biz/lola-seattle', u'address': u'\n\t\t\t2000 4th AveSeattle, WA 98121\n\t\t', u'desc': u'Lola', u'_id': ObjectId('524c04c4e291973e113649c8'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6135095, u'lng': -122.3400977}, u'viewport': {u'northeast': {u'lat': 47.6148584802915, u'lng': -122.3387487197085}, u'southwest': {u'lat': 47.6121605197085, u'lng': -122.3414466802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'2000', u'types': [u'street_number'], u'short_name': u'2000'}, {u'long_name': u'4th Avenue', u'types': [u'route'], u'short_name': u'4th Ave'}, {u'long_name': u'Belltown', u'types': [u'neighborhood', u'political'], u'short_name': u'Belltown'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98121', u'types': [u'postal_code'], u'short_name': u'98121'}], u'formatted_address': u'2000 4th Avenue, Seattle, WA 98121, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,647][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,648][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u"Hands down the best cupcake I've tried in Seattle.", u'review_count': u'666', u'title': u'Trophy Cupcakes and Party', u'rating_string': u'4.0', u'category_str_list': [u'Bakeries', u'Coffee & Tea', u'Desserts'], u'link': u'/biz/trophy-cupcakes-and-party-seattle-7', u'address': u'\n\t\t\t1815 N 45th StSeattle, WA 98103\n\t\t', u'desc': u'Trophy Cupcakes and Party', u'_id': ObjectId('524c04c4e291973e113649c9'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.66081560000001, u'lng': -122.335713}, u'viewport': {u'northeast': {u'lat': 47.66216458029151, u'lng': -122.3343640197085}, u'southwest': {u'lat': 47.65946661970851, u'lng': -122.3370619802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1815', u'types': [u'street_number'], u'short_name': u'1815'}, {u'long_name': u'North 45th Street', u'types': [u'route'], u'short_name': u'N 45th St'}, {u'long_name': u'Wallingford', u'types': [u'neighborhood', u'political'], u'short_name': u'Wallingford'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98103', u'types': [u'postal_code'], u'short_name': u'98103'}], u'formatted_address': u'1815 North 45th Street, Seattle, WA 98103, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,648][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,649][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'The Sierra Chicken is perfection paired with the Quinoa salad.', u'review_count': u'244', u'title': u'Michou', u'rating_string': u'4.5', u'category_str_list': [u'Delis', u'Sandwiches'], u'link': u'/biz/michou-seattle', u'address': u'\n\t\t\t1904 Pike PlSeattle, WA 98101\n\t\t', u'desc': u'Michou', u'_id': ObjectId('524c04c4e291973e113649ca'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6097793, u'lng': -122.3423324}, u'southwest': {u'lat': 47.6097699, u'lng': -122.3423446}}, u'viewport': {u'northeast': {u'lat': 47.6111235802915, u'lng': -122.3409895197085}, u'southwest': {u'lat': 47.6084256197085, u'lng': -122.3436874802915}}, u'location': {u'lat': 47.6097793, u'lng': -122.3423324}}, u'address_components': [{u'long_name': u'1904', u'types': [u'street_number'], u'short_name': u'1904'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1904 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,649][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,650][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'...the atmosphere is so unique: convenience store meets great craft beer...', u'review_count': u'91', u'title': u"Chuck's Hop Shop", u'rating_string': u'4.5', u'category_str_list': [u'Beer, Wine & Spirits', u'Ice Cream & Frozen Yogurt', u'Food Trucks'], u'link': u'/biz/chucks-hop-shop-seattle', u'address': u'\n\t\t\t656 NW 85th StSeattle, WA 98117\n\t\t', u'desc': u"Chuck's Hop Shop", u'_id': ObjectId('524c04c4e291973e113649cb'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.690877, u'lng': -122.365774}, u'viewport': {u'northeast': {u'lat': 47.6922259802915, u'lng': -122.3644250197085}, u'southwest': {u'lat': 47.6895280197085, u'lng': -122.3671229802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'656', u'types': [u'street_number'], u'short_name': u'656'}, {u'long_name': u"Chuck's 85th St. Market", u'types': [u'establishment'], u'short_name': u"Chuck's 85th St. Market"}, {u'long_name': u'Northwest 85th Street', u'types': [u'route'], u'short_name': u'NW 85th St'}, {u'long_name': u'Greenwood', u'types': [u'neighborhood', u'political'], u'short_name': u'Greenwood'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98117', u'types': [u'postal_code'], u'short_name': u'98117'}], u'formatted_address': u"656 Northwest 85th Street, Chuck's 85th St. Market, Seattle, WA 98117, USA", u'types': [u'street_address']}]}
[2015-03-18 16:39:32,650][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,651][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I also got a pistachio cream puff which was delicious and unique.', u'review_count': u'218', u'title': u'Gelatiamo', u'rating_string': u'4.5', u'category_str_list': [u'Bakeries', u'Ice Cream & Frozen Yogurt', u'Gelato'], u'link': u'/biz/gelatiamo-seattle', u'address': u'\n\t\t\t1400 3rd AveSeattle, WA 98101\n\t\t', u'desc': u'Gelatiamo', u'_id': ObjectId('524c04c4e291973e113649cc'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6089606, u'lng': -122.3368071}, u'viewport': {u'northeast': {u'lat': 47.61030958029151, u'lng': -122.3354581197085}, u'southwest': {u'lat': 47.60761161970851, u'lng': -122.3381560802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1400', u'types': [u'street_number'], u'short_name': u'1400'}, {u'long_name': u'3rd Avenue', u'types': [u'route'], u'short_name': u'3rd Ave'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1400 3rd Avenue, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,652][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,652][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Truffle oil, truffle salt, truffle spread, truffle galore.', u'review_count': u'80', u'title': u'La Buona Tavola', u'rating_string': u'4.5', u'category_str_list': [u'Specialty Food', u'Beer, Wine & Spirits'], u'link': u'/biz/la-buona-tavola-seattle', u'address': u'\n\t\t\t1524 Pike PlSeattle, WA 98101\n\t\t', u'desc': u'La Buona Tavola', u'_id': ObjectId('524c04c4e291973e113649cd'), u'price_range': 2, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.6088002, u'lng': -122.3406852}, u'southwest': {u'lat': 47.6087908, u'lng': -122.3406974}}, u'viewport': {u'northeast': {u'lat': 47.6101444802915, u'lng': -122.3393423197085}, u'southwest': {u'lat': 47.6074465197085, u'lng': -122.3420402802915}}, u'location': {u'lat': 47.6088002, u'lng': -122.3406852}}, u'address_components': [{u'long_name': u'1524', u'types': [u'street_number'], u'short_name': u'1524'}, {u'long_name': u'Pike Place', u'types': [u'route'], u'short_name': u'Pike Pl'}, {u'long_name': u'Pike Place Market', u'types': [u'neighborhood', u'political'], u'short_name': u'Pike Place Market'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98101', u'types': [u'postal_code'], u'short_name': u'98101'}], u'formatted_address': u'1524 Pike Place, Seattle, WA 98101, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,653][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,653][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Will definitely return to eat more ham waffles.', u'review_count': u'114', u'title': u'Empire Espresso', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea', u'Sandwiches'], u'link': u'/biz/empire-espresso-seattle', u'address': u'\n\t\t\t3829 S Edmunds StSeattle, WA 98118\n\t\t', u'desc': u'Empire Espresso', u'_id': ObjectId('524c04c4e291973e113649ce'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.5586513, u'lng': -122.284084}, u'southwest': {u'lat': 47.55863890000001, u'lng': -122.284084}}, u'viewport': {u'northeast': {u'lat': 47.5599940802915, u'lng': -122.2827350197085}, u'southwest': {u'lat': 47.5572961197085, u'lng': -122.2854329802915}}, u'location': {u'lat': 47.55863890000001, u'lng': -122.284084}}, u'address_components': [{u'long_name': u'3829', u'types': [u'street_number'], u'short_name': u'3829'}, {u'long_name': u'South Edmunds Street', u'types': [u'route'], u'short_name': u'S Edmunds St'}, {u'long_name': u'Rainier Valley', u'types': [u'neighborhood', u'political'], u'short_name': u'Rainier Valley'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98118', u'types': [u'postal_code'], u'short_name': u'98118'}], u'formatted_address': u'3829 South Edmunds Street, Seattle, WA 98118, USA', u'types': [u'street_address']}]}
[2015-03-18 16:39:32,654][4003 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:39:32,654][4003 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'Great location near the light rail too.', u'review_count': u'80', u'title': u'The Station', u'rating_string': u'4.5', u'category_str_list': [u'Coffee & Tea'], u'link': u'/biz/the-station-seattle-3', u'address': u'\n\t\t\t2533 16th Ave SSeattle, WA 98144\n\t\t', u'desc': u'The Station', u'_id': ObjectId('524c04c4e291973e113649cf'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location_type': u'RANGE_INTERPOLATED', u'bounds': {u'northeast': {u'lat': 47.5807027, u'lng': -122.3121125}, u'southwest': {u'lat': 47.5807026, u'lng': -122.3121309}}, u'viewport': {u'northeast': {u'lat': 47.5820516302915, u'lng': -122.3107727197085}, u'southwest': {u'lat': 47.5793536697085, u'lng': -122.3134706802915}}, u'location': {u'lat': 47.5807027, u'lng': -122.3121309}}, u'address_components': [{u'long_name': u'2533', u'types': [u'street_number'], u'short_name': u'2533'}, {u'long_name': u'16th Avenue South', u'types': [u'route'], u'short_name': u'16th Ave S'}, {u'long_name': u'Greater Duwamish', u'types': [u'neighborhood', u'political'], u'short_name': u'Greater Duwamish'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98144', u'types': [u'postal_code'], u'short_name': u'98144'}], u'partial_match': True, u'formatted_address': u'2533 16th Avenue South, Seattle, WA 98144, USA', u'types': [u'street_address']}]}
[2015-03-18 16:52:58,057][4302 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-18 16:52:58,057][4302 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-18 16:52:58,130][4302 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-18 16:52:58,131][4302 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-18 16:52:58,191][4302 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-18 16:52:58,240][4302 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-18 16:52:58,267][4302 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-18 16:52:58,268][4302 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-18 16:52:58,269][4302 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-18 16:52:58,270][4302 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-18 16:53:17,099][4302 ][monk.base   ][ERROR   ][145 ][base.py ] : monkType
[2015-03-18 16:53:17,100][4302 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {u'comment': u'I love all those options for yogurt flavors and toppings.', u'review_count': u'275', u'title': u'Yogurtland', u'rating_string': u'4.5', 'MonkType': 'Entity', u'category_str_list': [u'Ice Cream & Frozen Yogurt'], u'link': u'/biz/yogurtland-seattle', u'address': u'\n\t\t\t1620 BroadwaySeattle, WA 98122\n\t\t', u'desc': u'Yogurtland', u'_id': ObjectId('524c04c4e291973e1136496c'), u'price_range': 1, u'google_geometry': [{u'geometry': {u'location': {u'lat': 47.6162747, u'lng': -122.3205492}, u'viewport': {u'northeast': {u'lat': 47.6176236802915, u'lng': -122.3192002197085}, u'southwest': {u'lat': 47.6149257197085, u'lng': -122.3218981802915}}, u'location_type': u'ROOFTOP'}, u'address_components': [{u'long_name': u'1620', u'types': [u'street_number'], u'short_name': u'1620'}, {u'long_name': u'Broadway', u'types': [u'route'], u'short_name': u'Broadway'}, {u'long_name': u'Capitol Hill', u'types': [u'neighborhood', u'political'], u'short_name': u'Capitol Hill'}, {u'long_name': u'Seattle', u'types': [u'locality', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'Seattle', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Seattle'}, {u'long_name': u'King', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'King'}, {u'long_name': u'Washington', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'WA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}, {u'long_name': u'98122', u'types': [u'postal_code'], u'short_name': u'98122'}], u'formatted_address': u'1620 Broadway, Seattle, WA 98122, USA', u'types': [u'street_address']}]}
[2015-03-18 16:55:00,775][4442 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-18 16:55:00,776][4442 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-18 16:55:00,858][4442 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-18 16:55:00,859][4442 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-18 16:55:00,925][4442 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-18 16:55:00,991][4442 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-18 16:55:01,026][4442 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-18 16:55:01,027][4442 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-18 16:55:01,027][4442 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-18 16:55:01,028][4442 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-20 17:05:51,023][11844][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 17:05:51,029][11844][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 17:05:51,238][11844][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 17:05:51,239][11844][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 17:05:51,355][11844][monk.crane  ][WARNING ][33  ][crane.py] : timed out
[2015-03-20 17:05:51,356][11844][monk.crane  ][WARNING ][34  ][crane.py] : failed to connect Travel@monkdb.cloudapp.net:27017
[2015-03-20 17:07:04,264][11844][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 17:07:04,269][11844][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 17:07:04,437][11844][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 17:07:04,437][11844][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 17:07:04,566][11844][monk.crane  ][WARNING ][33  ][crane.py] : timed out
[2015-03-20 17:07:04,566][11844][monk.crane  ][WARNING ][34  ][crane.py] : failed to connect Travel@monkdb.cloudapp.net:27017
[2015-03-20 20:08:08,709][11844][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:08:08,713][11844][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 20:08:10,354][11844][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 20:08:10,355][11844][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:08:11,309][11844][monk.crane  ][WARNING ][33  ][crane.py] : timed out
[2015-03-20 20:08:11,310][11844][monk.crane  ][WARNING ][34  ][crane.py] : failed to connect Travel@monkdb.cloudapp.net:27017
[2015-03-20 20:09:57,877][11844][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:10:05,079][11844][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:11:06,113][11844][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:11:06,113][11844][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 20:11:06,399][11844][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 20:11:06,400][11844][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:11:06,506][11844][monk.crane  ][WARNING ][33  ][crane.py] : timed out
[2015-03-20 20:11:06,507][11844][monk.crane  ][WARNING ][34  ][crane.py] : failed to connect Travel@monkdb.cloudapp.net:27017
[2015-03-20 20:16:44,835][11844][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:16:44,935][11844][monk.crane  ][WARNING ][33  ][crane.py] : timed out
[2015-03-20 20:16:44,935][11844][monk.crane  ][WARNING ][34  ][crane.py] : failed to connect Travel@monkdb.cloudapp.net:27017
[2015-03-20 20:18:01,998][11844][monk.crane  ][WARNING ][33  ][crane.py] : timed out
[2015-03-20 20:18:02,000][11844][monk.crane  ][WARNING ][34  ][crane.py] : failed to connect Travel@monkdb.cloudapp.net:27017
[2015-03-20 20:20:56,105][13222][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:21:11,021][13222][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:21:11,021][13222][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 20:21:11,218][13222][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 20:21:11,219][13222][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:21:11,354][13222][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-20 20:21:11,489][13222][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-20 20:21:11,632][13222][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-20 20:21:11,632][13222][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-20 20:21:11,633][13222][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-20 20:21:11,635][13222][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-20 20:21:25,245][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,246][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,246][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,247][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,249][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,251][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,252][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,252][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,253][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,254][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,254][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,255][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,255][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,256][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,257][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,257][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,258][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,259][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,259][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,260][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,260][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,261][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,261][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,262][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,262][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,263][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,264][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,264][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,265][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,265][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,266][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,267][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,267][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,268][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,269][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,270][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,270][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,271][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,272][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,273][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,274][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,274][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,275][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,276][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,277][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,278][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,278][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,279][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,280][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,281][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,281][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,282][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,282][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,283][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,284][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,285][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,285][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,286][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,286][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,287][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,287][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,287][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,288][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,289][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,289][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,289][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,290][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,290][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,291][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,291][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,292][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,292][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,292][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,293][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,293][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,294][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,294][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,295][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,295][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,295][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,296][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,296][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,297][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,297][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,298][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,298][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,298][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,299][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,299][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,300][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,300][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,300][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,301][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,301][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,302][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,302][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,302][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,303][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,303][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,304][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:25,304][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,332][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,332][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,333][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,333][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,334][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,334][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,335][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,335][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,336][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,336][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,337][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,338][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,338][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,339][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,339][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,340][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,340][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,341][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,342][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,342][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,343][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,343][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,344][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,344][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,345][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,345][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,346][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,347][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,347][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,348][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,348][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,349][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,349][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,350][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,351][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,351][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,352][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,352][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,353][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,353][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,354][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,355][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,355][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,356][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,356][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,357][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,357][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,358][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,358][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,359][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,359][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,360][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,361][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,361][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,362][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,362][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,363][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,363][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,364][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,365][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,365][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,366][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,366][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,367][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,367][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,368][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,369][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,369][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,370][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,370][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,371][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,371][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,372][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,372][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,373][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,374][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,374][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,375][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,375][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,376][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,376][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,377][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,378][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,378][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,379][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,379][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,380][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,380][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,381][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,381][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,382][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,382][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,383][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,384][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,384][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,385][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,385][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,386][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,386][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,387][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,388][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,388][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,389][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,389][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,390][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,390][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,391][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,392][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,392][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,393][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,393][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,394][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,394][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,395][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,396][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,396][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,397][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,397][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,398][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,398][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,399][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,399][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,400][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,401][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,401][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,402][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,402][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,403][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,403][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,404][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,404][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,405][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,406][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,406][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,407][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,407][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,408][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,408][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,409][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,409][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,410][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,411][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,411][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,412][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,412][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,413][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,413][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,414][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,415][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,415][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,416][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,416][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,417][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,417][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,418][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,418][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,419][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,420][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,420][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,421][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,421][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,422][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,422][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,423][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,423][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,424][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,425][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,425][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,426][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,426][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,427][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,427][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,428][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,428][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,429][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,430][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,430][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,431][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,431][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,432][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,432][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,433][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,433][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,434][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,434][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,435][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,435][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,436][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,436][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,437][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,437][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,438][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,438][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,439][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,440][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,440][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,441][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,441][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,442][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,443][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,443][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,444][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,444][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,445][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,446][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,446][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,447][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,447][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,448][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,448][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,449][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,450][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,450][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,451][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,451][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,452][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,453][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,453][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,454][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,455][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,455][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,456][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,457][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,457][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,458][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,458][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,459][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,460][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,460][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,461][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,461][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,462][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,463][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,463][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,464][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,464][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,465][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,465][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,466][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,467][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,467][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,468][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,468][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,469][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,470][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,470][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,471][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,471][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,472][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,473][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,473][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,474][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,474][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,475][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,475][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,476][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,477][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,477][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,478][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,478][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,479][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,479][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,480][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,481][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,481][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,482][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,482][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,483][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,483][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,484][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,484][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,485][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,486][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,486][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,487][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,487][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,488][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,488][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,489][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,489][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,490][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,491][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,491][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,492][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,492][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,493][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,493][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,494][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,495][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,495][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,496][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,496][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,497][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,497][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,498][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,498][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,499][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,500][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,500][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,501][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,501][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,502][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,502][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,503][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,504][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,504][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,505][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,505][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,506][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,506][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,507][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,507][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,508][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,509][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,509][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,510][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,510][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,511][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,511][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,512][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,512][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,513][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,514][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,514][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,515][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,515][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,516][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,516][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,517][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,517][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,518][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,519][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,519][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,520][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,520][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,521][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,521][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,522][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,523][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,523][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,524][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,524][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,525][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,525][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,526][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,526][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,527][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,528][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,528][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,529][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,529][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,530][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,530][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,531][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,532][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,532][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,533][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,533][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,534][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,534][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,535][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,536][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,536][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,537][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,537][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,538][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,538][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,539][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,539][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,540][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,541][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,541][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,542][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,542][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,543][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,543][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,544][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,545][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,545][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,546][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,546][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,547][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,547][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,548][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,549][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,549][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,550][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,550][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,551][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,551][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,552][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,553][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,553][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,554][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,554][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,555][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,555][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,556][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,556][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,557][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,558][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,558][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,559][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,559][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,560][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,560][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,561][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,562][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,562][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,563][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,563][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,564][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,564][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,565][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,565][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,566][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,567][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,567][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,568][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,568][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,569][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,569][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,570][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,570][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,571][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,572][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,572][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,573][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,573][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,574][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,574][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,575][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,576][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,576][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,577][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,577][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,578][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,578][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,579][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,579][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,580][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,581][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,581][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,582][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,582][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,583][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,583][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,584][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,585][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,585][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,586][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,586][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,587][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,587][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,588][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,589][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,589][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,590][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,590][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,591][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,591][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,592][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,592][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,593][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,594][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,594][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,595][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,595][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,596][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,596][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,597][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,597][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,598][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,599][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,599][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,600][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,600][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,601][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,601][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,602][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,603][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,603][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,604][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,604][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,605][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,605][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,606][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,606][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,607][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,608][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,608][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,609][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,609][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,610][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,610][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,611][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,611][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,612][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,613][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,613][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,614][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,614][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,615][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,615][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,616][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,616][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,617][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,618][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,618][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,619][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,619][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,620][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,620][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,621][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,621][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,622][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,623][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,623][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,624][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,624][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,625][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,625][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,626][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,627][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,627][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,628][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,628][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,629][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,629][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,630][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,631][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,631][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,632][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,632][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,633][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,634][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,634][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,635][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,635][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,636][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,636][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,637][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,638][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,638][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,639][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,639][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,640][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,640][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,641][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,642][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,642][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,643][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,643][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,644][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,645][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,645][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,646][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,646][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,647][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,647][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,648][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,648][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,649][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,650][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,650][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,651][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,651][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,652][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,652][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,653][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,654][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,654][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,655][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,655][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,656][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,657][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,657][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,658][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,658][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,659][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,659][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,660][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,661][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,661][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,662][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,662][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,663][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,663][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,664][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,665][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,665][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,666][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,666][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,667][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,668][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,668][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:21:26,669][13222][monk.base   ][WARNING ][87  ][base.py ] : no store for abstract MONKObject
[2015-03-20 20:28:29,078][13357][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:28:30,587][13357][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:28:30,587][13357][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 20:28:31,223][13357][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 20:28:31,224][13357][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:28:31,573][13357][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-20 20:28:32,173][13357][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-20 20:28:32,440][13357][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-20 20:28:32,441][13357][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-20 20:28:32,442][13357][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-20 20:28:32,443][13357][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-20 20:41:45,864][13493][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:41:48,473][13493][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:41:48,474][13493][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 20:41:51,240][13493][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 20:41:51,242][13493][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:41:51,873][13493][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-20 20:41:52,908][13493][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-20 20:41:58,459][13493][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-20 20:41:58,461][13493][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-20 20:41:58,462][13493][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-20 20:41:58,464][13493][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-20 20:43:58,844][13539][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:43:59,585][13539][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:43:59,585][13539][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 20:44:00,306][13539][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 20:44:00,307][13539][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:44:00,647][13539][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-20 20:44:01,571][13539][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-20 20:44:02,107][13539][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-20 20:44:02,109][13539][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-20 20:44:02,110][13539][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-20 20:44:02,111][13539][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-20 20:47:48,555][13611][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:47:50,232][13611][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-20 20:47:50,234][13611][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-20 20:47:50,965][13611][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-20 20:47:50,966][13611][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-20 20:47:51,538][13611][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-20 20:47:51,945][13611][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-20 20:47:52,303][13611][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-20 20:47:52,305][13611][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-20 20:47:52,307][13611][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-20 20:47:52,309][13611][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-21 06:32:41,664][3358 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 06:32:44,216][3358 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 06:32:44,217][3358 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-21 06:32:44,301][3358 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-21 06:32:44,301][3358 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-21 06:32:44,303][3358 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-21 06:32:44,305][3358 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-21 06:32:44,306][3358 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-21 06:32:44,307][3358 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-21 06:32:44,308][3358 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-21 06:32:44,309][3358 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-21 06:33:39,685][3450 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 06:33:40,213][3450 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 06:33:40,214][3450 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-21 06:33:40,217][3450 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-21 06:33:40,218][3450 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-21 06:33:40,219][3450 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-21 06:33:40,220][3450 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-21 06:33:40,222][3450 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-21 06:33:40,223][3450 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-21 06:33:40,227][3450 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-21 06:33:40,228][3450 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-21 06:34:35,239][3481 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 06:34:35,900][3481 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 06:34:35,901][3481 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-21 06:34:35,904][3481 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-21 06:34:35,904][3481 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-21 06:34:35,906][3481 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-21 06:34:35,907][3481 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-21 06:34:35,909][3481 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-21 06:34:35,910][3481 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-21 06:34:35,911][3481 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-21 06:34:35,912][3481 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-21 07:03:41,722][3481 ][monk.base   ][ERROR   ][145 ][base.py ] : UnigramTurtle,
[2015-03-21 07:03:41,723][3481 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {'monkType': 'UnigramTurtle,', 'name': 'travel_unigram,', 'description': 'extract unigram features'}
[2015-03-21 07:05:23,576][3481 ][monk.base   ][ERROR   ][145 ][base.py ] : UniGramTurtle,
[2015-03-21 07:05:23,576][3481 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {'monkType': 'UniGramTurtle,', 'name': 'travel_unigram,', 'description': 'extract unigram features'}
[2015-03-21 07:08:10,230][3481 ][monk.base   ][ERROR   ][145 ][base.py ] : UniGramTurtle,
[2015-03-21 07:08:10,231][3481 ][monk.base   ][ERROR   ][146 ][base.py ] : can not decode {'monkType': 'UniGramTurtle,', 'name': 'travel_unigram,', 'description': 'extract unigram features'}
[2015-03-21 07:20:05,231][4597 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 07:20:05,850][4597 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 07:20:05,851][4597 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-21 07:20:05,865][4597 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-21 07:20:05,865][4597 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-21 07:20:05,866][4597 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-21 07:20:05,868][4597 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-21 07:20:05,869][4597 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-21 07:20:05,870][4597 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-21 07:20:05,870][4597 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-21 07:20:05,871][4597 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-21 07:31:22,606][4597 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Yogurtland']
[2015-03-21 07:31:22,610][4597 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : yogurtland
[2015-03-21 07:34:11,219][4736 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 07:34:11,860][4736 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 07:34:11,861][4736 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-21 07:34:11,873][4736 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-21 07:34:11,874][4736 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-21 07:34:11,875][4736 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-21 07:34:11,878][4736 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-21 07:34:11,879][4736 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-21 07:34:11,880][4736 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-21 07:34:11,881][4736 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-21 07:34:11,881][4736 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-21 07:35:47,311][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Yogurtland']
[2015-03-21 07:35:47,314][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : yogurtland
[2015-03-21 07:35:47,319][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I love all those options for yogurt flavors and toppings.']
[2015-03-21 07:35:47,320][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : yogurt flavor top love option
[2015-03-21 07:35:47,325][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Yogurtland']
[2015-03-21 07:35:47,326][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : yogurtland
[2015-03-21 07:35:47,327][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'List']
[2015-03-21 07:35:47,328][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : list
[2015-03-21 07:35:47,330][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I LOVE LOVE LOVE the gnocchi with black truffle cream.']
[2015-03-21 07:35:47,331][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : black cream love gnocchi truffl
[2015-03-21 07:35:47,335][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'List']
[2015-03-21 07:35:47,336][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : list
[2015-03-21 07:35:47,339][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Hiram M. Chittenden Locks']
[2015-03-21 07:35:47,341][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : lock chittenden hiram
[2015-03-21 07:35:47,345][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Make sure to check out the salmon at the fish ladder.']
[2015-03-21 07:35:47,347][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : sure fish ladder salmon check make
[2015-03-21 07:35:47,358][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Hiram M. Chittenden Locks']
[2015-03-21 07:35:47,359][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : lock chittenden hiram
[2015-03-21 07:35:47,362][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Laura Bee Designs']
[2015-03-21 07:35:47,364][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : laura design bee
[2015-03-21 07:35:47,369][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'with such a great assortment of unique purses and jewelry.']
[2015-03-21 07:35:47,371][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : purs jewelri great assort uniqu
[2015-03-21 07:35:47,377][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Laura Bee Designs']
[2015-03-21 07:35:47,379][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : laura design bee
[2015-03-21 07:35:47,379][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Radar Hair & Records']
[2015-03-21 07:35:47,381][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : hair radar record &
[2015-03-21 07:35:47,384][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'If you need a top notch guy hair cut, Martin is your guy.']
[2015-03-21 07:35:47,386][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : cut top , hair martin need guy notch
[2015-03-21 07:35:47,392][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Radar Hair & Records']
[2015-03-21 07:35:47,393][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : hair radar record &
[2015-03-21 07:35:47,394][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Hotel 1000']
[2015-03-21 07:35:47,395][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : hotel 1000
[2015-03-21 07:35:47,397][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Floor to ceiling windows facing the bay and the stadiums.']
[2015-03-21 07:35:47,399][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : floor ceil bay window stadium face
[2015-03-21 07:35:47,404][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Hotel 1000']
[2015-03-21 07:35:47,405][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : hotel 1000
[2015-03-21 07:35:47,406][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Mr. Gyros']
[2015-03-21 07:35:47,406][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gyro
[2015-03-21 07:35:47,408][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'A must try for anyone who loves a good Gyro.']
[2015-03-21 07:35:47,409][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tri good love gyro anyon must
[2015-03-21 07:35:47,413][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Mr. Gyros']
[2015-03-21 07:35:47,415][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gyro
[2015-03-21 07:35:47,417][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Chihuly Garden and Glass']
[2015-03-21 07:35:47,419][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : glass chihuli garden
[2015-03-21 07:35:47,429][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"It's a great area, right near the Space Needle and EMP museum."]
[2015-03-21 07:35:47,431][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : great right 's area museum space , near emp needl
[2015-03-21 07:35:47,439][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Chihuly Garden and Glass']
[2015-03-21 07:35:47,440][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : glass chihuli garden
[2015-03-21 07:35:47,440][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Salumi Artisan Cured Meats']
[2015-03-21 07:35:47,442][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : cure meat salumi artisan
[2015-03-21 07:35:47,446][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I enjoyed both, but the porchetta was the hands down fave.']
[2015-03-21 07:35:47,447][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : enjoy porchetta fave , hand
[2015-03-21 07:35:47,451][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Salumi Artisan Cured Meats']
[2015-03-21 07:35:47,453][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : cure meat salumi artisan
[2015-03-21 07:35:47,453][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Theo Chocolate']
[2015-03-21 07:35:47,455][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : theo chocol
[2015-03-21 07:35:47,458][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I thought the tour was very informative and interesting.']
[2015-03-21 07:35:47,460][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : thought inform tour interest
[2015-03-21 07:35:47,464][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Theo Chocolate']
[2015-03-21 07:35:47,465][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : theo chocol
[2015-03-21 07:35:47,466][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Babeland']
[2015-03-21 07:35:47,466][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : babeland
[2015-03-21 07:35:47,468][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Sex positive, excellent selection, friendly and helpful staff.']
[2015-03-21 07:35:47,469][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : help excel friendli , posit sex select staff
[2015-03-21 07:35:47,476][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Babeland']
[2015-03-21 07:35:47,477][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : babeland
[2015-03-21 07:35:47,477][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Pike Place Chowder']
[2015-03-21 07:35:47,478][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pike chowder place
[2015-03-21 07:35:47,481][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Quite easily the BEST New England style clam chowder I've had."]
[2015-03-21 07:35:47,482][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : quit style clam england 've easili chowder new best
[2015-03-21 07:35:47,491][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Pike Place Chowder']
[2015-03-21 07:35:47,492][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pike chowder place
[2015-03-21 07:35:47,493][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Daily Dozen Doughnut Company']
[2015-03-21 07:35:47,494][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : doughnut compani daili dozen
[2015-03-21 07:35:47,498][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I wish we had these wonderful powdered doughnuts in San Jose.']
[2015-03-21 07:35:47,500][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : jose san wish powder doughnut wonder
[2015-03-21 07:35:47,504][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Daily Dozen Doughnut Company']
[2015-03-21 07:35:47,505][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : doughnut compani daili dozen
[2015-03-21 07:35:47,506][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Mighty-O Donuts']
[2015-03-21 07:35:47,507][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : donut mighty-o
[2015-03-21 07:35:47,509][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I loved the raspberry glaze over vanilla cake donut.']
[2015-03-21 07:35:47,510][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : love vanilla raspberri glaze donut cake
[2015-03-21 07:35:47,514][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Mighty-O Donuts']
[2015-03-21 07:35:47,515][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : donut mighty-o
[2015-03-21 07:35:47,516][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Remedy Teas']
[2015-03-21 07:35:47,517][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tea remedi
[2015-03-21 07:35:47,520][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I love this place and I love that all the teas are organic.']
[2015-03-21 07:35:47,521][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : place love organ tea
[2015-03-21 07:35:47,523][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Remedy Teas']
[2015-03-21 07:35:47,524][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tea remedi
[2015-03-21 07:35:47,524][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Tacos El Asadero']
[2015-03-21 07:35:47,525][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : el asadero taco
[2015-03-21 07:35:47,529][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'i abso-effing-lutely LOVE this taco bus.']
[2015-03-21 07:35:47,530][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : love bu abso-effing-lut taco
[2015-03-21 07:35:47,533][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Tacos El Asadero']
[2015-03-21 07:35:47,534][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : el asadero taco
[2015-03-21 07:35:47,535][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Bottlehouse']
[2015-03-21 07:35:47,536][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bottlehous
[2015-03-21 07:35:47,537][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'We also had the pleasure of meeting Henri, the owner.']
[2015-03-21 07:35:47,538][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : henri , also owner meet pleasur
[2015-03-21 07:35:47,543][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Bottlehouse']
[2015-03-21 07:35:47,544][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bottlehous
[2015-03-21 07:35:47,545][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Art of The Table']
[2015-03-21 07:35:47,546][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : art tabl
[2015-03-21 07:35:47,548][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'It also gave us a chance to chat with Chef Dustin.']
[2015-03-21 07:35:47,549][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : us chef also chat dustin chanc gave
[2015-03-21 07:35:47,555][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Art of The Table']
[2015-03-21 07:35:47,556][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : art tabl
[2015-03-21 07:35:47,556][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Monorail Espresso']
[2015-03-21 07:35:47,557][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : espresso monorail
[2015-03-21 07:35:47,560][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I am even sipping the most amazing Egg Nog Latte right now.']
[2015-03-21 07:35:47,561][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : even latt sip nog right egg amaz
[2015-03-21 07:35:47,566][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Monorail Espresso']
[2015-03-21 07:35:47,567][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : espresso monorail
[2015-03-21 07:35:47,567][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Elliott Bay Book Company']
[2015-03-21 07:35:47,568][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : elliott book compani bay
[2015-03-21 07:35:47,571][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'is classic Seattle, and simply the best bookstore in town.']
[2015-03-21 07:35:47,572][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : town simpli classic , seattl bookstor best
[2015-03-21 07:35:47,576][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Elliott Bay Book Company']
[2015-03-21 07:35:47,577][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : elliott book compani bay
[2015-03-21 07:35:47,577][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Super Jock 'n Jill"]
[2015-03-21 07:35:47,578][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 'n jill super jock
[2015-03-21 07:35:47,583][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I'll be coming back here for my next pair of running shoes."]
[2015-03-21 07:35:47,584][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : run back next shoe pair 'll come
[2015-03-21 07:35:47,592][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Super Jock 'n Jill"]
[2015-03-21 07:35:47,593][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 'n jill super jock
[2015-03-21 07:35:47,594][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Crumpet Shop']
[2015-03-21 07:35:47,595][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : shop crumpet
[2015-03-21 07:35:47,598][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'What a great little gem right outside Pike Place Market.']
[2015-03-21 07:35:47,599][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pike great right littl place market outsid gem
[2015-03-21 07:35:47,606][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Crumpet Shop']
[2015-03-21 07:35:47,607][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : shop crumpet
[2015-03-21 07:35:47,608][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Uwajimaya']
[2015-03-21 07:35:47,609][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : uwajimaya
[2015-03-21 07:35:47,611][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Incredible market with an added bonus of a delicious food court.']
[2015-03-21 07:35:47,613][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : court ad incred food bonu delici market
[2015-03-21 07:35:47,621][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Uwajimaya']
[2015-03-21 07:35:47,622][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : uwajimaya
[2015-03-21 07:35:47,623][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"D'Ambrosio Gelato"]
[2015-03-21 07:35:47,624][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gelato d'ambrosio
[2015-03-21 07:35:47,626][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I loved the pistachio, and my friend loved the lavender.']
[2015-03-21 07:35:47,627][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : lavend pistachio love , friend
[2015-03-21 07:35:47,631][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"D'Ambrosio Gelato"]
[2015-03-21 07:35:47,632][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gelato d'ambrosio
[2015-03-21 07:35:47,632][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Le Panier French Bakery']
[2015-03-21 07:35:47,633][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : panier bakeri le french
[2015-03-21 07:35:47,638][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The fruit tarts and mini-pastries are equally delicious.']
[2015-03-21 07:35:47,640][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : delici fruit equal mini-pastri tart
[2015-03-21 07:35:47,646][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Le Panier French Bakery']
[2015-03-21 07:35:47,647][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : panier bakeri le french
[2015-03-21 07:35:47,647][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Beecher's Handmade Cheese"]
[2015-03-21 07:35:47,648][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : handmad beecher 's chees
[2015-03-21 07:35:47,652][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I can't wait to come back and have the Mac & Cheese again."]
[2015-03-21 07:35:47,653][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : & ca back n't mac chees come wait
[2015-03-21 07:35:47,657][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Beecher's Handmade Cheese"]
[2015-03-21 07:35:47,657][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : handmad beecher 's chees
[2015-03-21 07:35:47,658][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Archie McPhee']
[2015-03-21 07:35:47,659][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : mcphee archi
[2015-03-21 07:35:47,661][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'...set, crazy cat lady action figure, corndog air freshener, and my...']
[2015-03-21 07:35:47,661][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : set figur ladi , cat crazi air action freshen corndog
[2015-03-21 07:35:47,669][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Archie McPhee']
[2015-03-21 07:35:47,669][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : mcphee archi
[2015-03-21 07:35:47,670][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Sun Liquor']
[2015-03-21 07:35:47,670][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : sun liquor
[2015-03-21 07:35:47,673][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'FRESH SQUEEZED FRUIT JUICES (performed with an old timey juicer.']
[2015-03-21 07:35:47,675][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : old timey perform juicer fruit squeez fresh juic
[2015-03-21 07:35:47,681][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Sun Liquor']
[2015-03-21 07:35:47,682][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : sun liquor
[2015-03-21 07:35:47,683][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Pike Place Market']
[2015-03-21 07:35:47,683][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pike place market
[2015-03-21 07:35:47,684][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Not to mention all the lovely flowers and neat little art stands.']
[2015-03-21 07:35:47,684][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : flower art littl mention neat stand love
[2015-03-21 07:35:47,688][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Pike Place Market']
[2015-03-21 07:35:47,689][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pike place market
[2015-03-21 07:35:47,689][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Buckets']
[2015-03-21 07:35:47,690][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bucket
[2015-03-21 07:35:47,691][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Michael has done an amazing job every time I used him.']
[2015-03-21 07:35:47,692][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : use everi michael job done time amaz
[2015-03-21 07:35:47,697][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Buckets']
[2015-03-21 07:35:47,698][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bucket
[2015-03-21 07:35:47,698][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Scarecrow Video']
[2015-03-21 07:35:47,699][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : video scarecrow
[2015-03-21 07:35:47,701][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Well worth a visit if you like more obscure movies.']
[2015-03-21 07:35:47,704][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : like movi well visit obscur worth
[2015-03-21 07:35:47,710][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Scarecrow Video']
[2015-03-21 07:35:47,711][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : video scarecrow
[2015-03-21 07:35:47,712][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Georgetown Brewing Company']
[2015-03-21 07:35:47,713][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : brew georgetown compani
[2015-03-21 07:35:47,715][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I really love both the Manny's and 9llb Porter Beers."]
[2015-03-21 07:35:47,716][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : manni 's 9llb realli beer love porter
[2015-03-21 07:35:47,720][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Georgetown Brewing Company']
[2015-03-21 07:35:47,721][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : brew georgetown compani
[2015-03-21 07:35:47,722][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Tat's Delicatessen"]
[2015-03-21 07:35:47,723][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tat delicatessen 's
[2015-03-21 07:35:47,725][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'where they showed how they make their delicious pastrami.']
[2015-03-21 07:35:47,726][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : make delici pastrami show
[2015-03-21 07:35:47,728][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Tat's Delicatessen"]
[2015-03-21 07:35:47,729][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tat delicatessen 's
[2015-03-21 07:35:47,729][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Museum of Flight']
[2015-03-21 07:35:47,730][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : museum flight
[2015-03-21 07:35:47,731][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'You even get to walk through a Concorde and an old air force one.']
[2015-03-21 07:35:47,732][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : even one old concord forc get air walk
[2015-03-21 07:35:47,739][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Museum of Flight']
[2015-03-21 07:35:47,740][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : museum flight
[2015-03-21 07:35:47,741][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Paseo']
[2015-03-21 07:35:47,742][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : paseo
[2015-03-21 07:35:47,743][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I can't stop thinking about their Midnight Cuban Press sandwich."]
[2015-03-21 07:35:47,745][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : cuban sandwich stop ca midnight n't press think
[2015-03-21 07:35:47,751][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Paseo']
[2015-03-21 07:35:47,752][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : paseo
[2015-03-21 07:35:47,753][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Beer Junction']
[2015-03-21 07:35:47,754][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : beer junction
[2015-03-21 07:35:47,756][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Morgan has done such an amazing job with this place.']
[2015-03-21 07:35:47,757][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : place job done morgan amaz
[2015-03-21 07:35:47,758][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Beer Junction']
[2015-03-21 07:35:47,759][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : beer junction
[2015-03-21 07:35:47,760][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Bakery Nouveau']
[2015-03-21 07:35:47,761][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : nouveau bakeri
[2015-03-21 07:35:47,762][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'love love love love their twice baked almond croissant.']
[2015-03-21 07:35:47,764][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : twice bake love almond croissant
[2015-03-21 07:35:47,769][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Bakery Nouveau']
[2015-03-21 07:35:47,770][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : nouveau bakeri
[2015-03-21 07:35:47,771][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Paseo']
[2015-03-21 07:35:47,772][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : paseo
[2015-03-21 07:35:47,773][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I can't wait to go to the new spot by golden gardens this summer."]
[2015-03-21 07:35:47,774][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : golden garden summer ca spot n't go new wait
[2015-03-21 07:35:47,779][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Paseo']
[2015-03-21 07:35:47,779][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : paseo
[2015-03-21 07:35:47,780][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Espresso Vivace Sidewalk Bar']
[2015-03-21 07:35:47,781][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bar vivac espresso sidewalk
[2015-03-21 07:35:47,785][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I've had white mochas before, but their white velvet was amazing."]
[2015-03-21 07:35:47,786][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : velvet , mocha white 've amaz
[2015-03-21 07:35:47,790][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Espresso Vivace Sidewalk Bar']
[2015-03-21 07:35:47,791][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bar vivac espresso sidewalk
[2015-03-21 07:35:47,791][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Ballard Sunday Farmers Market']
[2015-03-21 07:35:47,792][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : ballard sunday market farmer
[2015-03-21 07:35:47,797][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Seattle's best year round farmers market."]
[2015-03-21 07:35:47,798][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's year market seattl farmer round best
[2015-03-21 07:35:47,801][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Ballard Sunday Farmers Market']
[2015-03-21 07:35:47,802][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : ballard sunday market farmer
[2015-03-21 07:35:47,803][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Piroshky Piroshky']
[2015-03-21 07:35:47,804][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : piroshki
[2015-03-21 07:35:47,806][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'LOVE LOVE LOVE the Beef and Cheese Piroshky here.']
[2015-03-21 07:35:47,807][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : chees love piroshki beef
[2015-03-21 07:35:47,809][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Piroshky Piroshky']
[2015-03-21 07:35:47,810][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : piroshki
[2015-03-21 07:35:47,810][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Slave To The Needle']
[2015-03-21 07:35:47,811][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : slave needl
[2015-03-21 07:35:47,813][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Slave To The Needle']
[2015-03-21 07:35:47,814][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : slave needl
[2015-03-21 07:35:47,814][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"MacPherson's Fruit & Produce"]
[2015-03-21 07:35:47,815][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : fruit 's produc macpherson &
[2015-03-21 07:35:47,818][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Great produce (much local), great prices, easy parking.']
[2015-03-21 07:35:47,820][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : great easi price park , much local produc
[2015-03-21 07:35:47,826][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"MacPherson's Fruit & Produce"]
[2015-03-21 07:35:47,827][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : fruit 's produc macpherson &
[2015-03-21 07:35:47,828][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Card Kingdom']
[2015-03-21 07:35:47,829][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : kingdom card
[2015-03-21 07:35:47,832][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I love everything about this place and Cafe Mox, too.']
[2015-03-21 07:35:47,833][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : mox love , place everyth cafe
[2015-03-21 07:35:47,837][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Card Kingdom']
[2015-03-21 07:35:47,838][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : kingdom card
[2015-03-21 07:35:47,838][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Vegan Haven']
[2015-03-21 07:35:47,839][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : haven vegan
[2015-03-21 07:35:47,842][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Sidecar is still totally #%&@*-n' awesome."]
[2015-03-21 07:35:47,843][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : @ still % & *-n awesom total sidecar
[2015-03-21 07:35:47,851][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Vegan Haven']
[2015-03-21 07:35:47,852][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : haven vegan
[2015-03-21 07:35:47,852][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Walrus and the Carpenter']
[2015-03-21 07:35:47,853][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : carpent walru
[2015-03-21 07:35:47,856][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I can't wait to return for some more delicious oysters."]
[2015-03-21 07:35:47,858][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : return ca n't delici oyster wait
[2015-03-21 07:35:47,861][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Walrus and the Carpenter']
[2015-03-21 07:35:47,862][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : carpent walru
[2015-03-21 07:35:47,863][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Metropolitan Grill']
[2015-03-21 07:35:47,864][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : grill metropolitan
[2015-03-21 07:35:47,866][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Wagyu is pricey but so worth it as a rare treat.']
[2015-03-21 07:35:47,868][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : wagyu pricey rare worth treat
[2015-03-21 07:35:47,872][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Metropolitan Grill']
[2015-03-21 07:35:47,873][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : grill metropolitan
[2015-03-21 07:35:47,874][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Honore Artisan Bakery']
[2015-03-21 07:35:47,875][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bakeri honor artisan
[2015-03-21 07:35:47,877][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Definitely will go back when I have a craving for Kouign Amann.']
[2015-03-21 07:35:47,878][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : amann definit back crave go kouign
[2015-03-21 07:35:47,882][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Honore Artisan Bakery']
[2015-03-21 07:35:47,883][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bakeri honor artisan
[2015-03-21 07:35:47,884][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Artist & Craftsman Supply']
[2015-03-21 07:35:47,885][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : suppli & craftsman artist
[2015-03-21 07:35:47,889][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Lots more canvases here and lots more sizes as well.']
[2015-03-21 07:35:47,891][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : canvas well lot size
[2015-03-21 07:35:47,895][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Artist & Craftsman Supply']
[2015-03-21 07:35:47,896][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : suppli & craftsman artist
[2015-03-21 07:35:47,897][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Shiro's"]
[2015-03-21 07:35:47,898][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's shiro
[2015-03-21 07:35:47,899][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The omakase was amazing and well worth the wait.']
[2015-03-21 07:35:47,901][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : wait well worth omakas amaz
[2015-03-21 07:35:47,902][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Shiro's"]
[2015-03-21 07:35:47,903][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's shiro
[2015-03-21 07:35:47,904][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Espresso Vivace Alley 24']
[2015-03-21 07:35:47,905][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 24 vivac espresso alley
[2015-03-21 07:35:47,907][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Vivace latte was smooth from start to finish.']
[2015-03-21 07:35:47,909][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : latt vivac finish smooth start
[2015-03-21 07:35:47,912][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Espresso Vivace Alley 24']
[2015-03-21 07:35:47,913][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 24 vivac espresso alley
[2015-03-21 07:35:47,914][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Calozzi's"]
[2015-03-21 07:35:47,914][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's calozzi
[2015-03-21 07:35:47,916][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Very flavorful beef w/ lots of whiz and tiny grilled onions.']
[2015-03-21 07:35:47,917][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : grill onion beef w/ whiz lot flavor tini
[2015-03-21 07:35:47,923][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Calozzi's"]
[2015-03-21 07:35:47,924][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's calozzi
[2015-03-21 07:35:47,925][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Confectional']
[2015-03-21 07:35:47,926][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : confect
[2015-03-21 07:35:47,928][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'This cheesecake is sooo creamy and rich yet not at all heavy.']
[2015-03-21 07:35:47,929][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : creami cheesecak sooo heavi rich yet
[2015-03-21 07:35:47,934][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Confectional']
[2015-03-21 07:35:47,936][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : confect
[2015-03-21 07:35:47,936][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'MarketSpice']
[2015-03-21 07:35:47,937][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : marketspic
[2015-03-21 07:35:47,938][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Like others, the cinnamon orange blend is to die for.']
[2015-03-21 07:35:47,939][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : like die orang , other cinnamon blend
[2015-03-21 07:35:47,945][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'MarketSpice']
[2015-03-21 07:35:47,945][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : marketspic
[2015-03-21 07:35:47,946][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Metsker Maps']
[2015-03-21 07:35:47,947][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : map metsker
[2015-03-21 07:35:47,950][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Everywhere you turn is another awesome map or globe.']
[2015-03-21 07:35:47,951][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : everywher map anoth globe turn awesom
[2015-03-21 07:35:47,959][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Metsker Maps']
[2015-03-21 07:35:47,960][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : map metsker
[2015-03-21 07:35:47,961][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Bob's Quality Meats"]
[2015-03-21 07:35:47,962][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : qualiti bob 's meat
[2015-03-21 07:35:47,964][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I saw Duck, Rabbit, Goat and great selection of sausages.']
[2015-03-21 07:35:47,965][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : great sausag , rabbit duck saw goat select
[2015-03-21 07:35:47,970][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Bob's Quality Meats"]
[2015-03-21 07:35:47,971][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : qualiti bob 's meat
[2015-03-21 07:35:47,972][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Nishino']
[2015-03-21 07:35:47,972][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : nishino
[2015-03-21 07:35:47,974][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I get an omakase every time, and it's always quite delicious."]
[2015-03-21 07:35:47,975][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : quit 's get , alway time everi delici omakas
[2015-03-21 07:35:47,977][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Nishino']
[2015-03-21 07:35:47,977][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : nishino
[2015-03-21 07:35:47,978][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Cascina Spinasse']
[2015-03-21 07:35:47,979][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : spinass cascina
[2015-03-21 07:35:47,981][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Tajarin with butter and sage sauce - DELICIOUS.']
[2015-03-21 07:35:47,982][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : butter tajarin sage - sauc delici
[2015-03-21 07:35:47,988][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Cascina Spinasse']
[2015-03-21 07:35:47,989][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : spinass cascina
[2015-03-21 07:35:47,989][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Sutra']
[2015-03-21 07:35:47,990][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : sutra
[2015-03-21 07:35:47,991][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'i added the non-alcoholic paring to the menu.']
[2015-03-21 07:35:47,992][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : menu pare non-alcohol ad
[2015-03-21 07:35:47,996][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Sutra']
[2015-03-21 07:35:47,996][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : sutra
[2015-03-21 07:35:47,997][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Seattle Coffee Works']
[2015-03-21 07:35:47,998][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : work seattl coffe
[2015-03-21 07:35:48,000][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The slow bar is a fairly unique experience in this city, and they...']
[2015-03-21 07:35:48,001][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : slow bar citi uniqu , fairli experi
[2015-03-21 07:35:48,005][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Seattle Coffee Works']
[2015-03-21 07:35:48,006][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : work seattl coffe
[2015-03-21 07:35:48,007][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Harvest Vine']
[2015-03-21 07:35:48,008][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : vine harvest
[2015-03-21 07:35:48,011][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Intimate and romantic setting with more seating downstairs.']
[2015-03-21 07:35:48,012][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : intim set seat downstair romant
[2015-03-21 07:35:48,016][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Harvest Vine']
[2015-03-21 07:35:48,017][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : vine harvest
[2015-03-21 07:35:48,018][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Il Corvo Pasta']
[2015-03-21 07:35:48,019][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : corvo pasta il
[2015-03-21 07:35:48,022][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The pasta is prepared perfectly, just slight al dente.']
[2015-03-21 07:35:48,023][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : slight prepar perfectli al , pasta dent
[2015-03-21 07:35:48,028][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Il Corvo Pasta']
[2015-03-21 07:35:48,029][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : corvo pasta il
[2015-03-21 07:35:48,029][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Fremont Troll']
[2015-03-21 07:35:48,030][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : troll fremont
[2015-03-21 07:35:48,033][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Fremont troll is a must-see for anyone living in Seattle.']
[2015-03-21 07:35:48,034][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : troll fremont live anyon seattl must-se
[2015-03-21 07:35:48,036][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Fremont Troll']
[2015-03-21 07:35:48,037][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : troll fremont
[2015-03-21 07:35:48,037][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Full Tilt Ice Cream']
[2015-03-21 07:35:48,038][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tilt full ice cream
[2015-03-21 07:35:48,043][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Vintage arcade games + delicious home made ice cream.']
[2015-03-21 07:35:48,044][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : made + game ice arcad home delici cream vintag
[2015-03-21 07:35:48,050][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Full Tilt Ice Cream']
[2015-03-21 07:35:48,051][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tilt full ice cream
[2015-03-21 07:35:48,052][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Blue Highway Games']
[2015-03-21 07:35:48,053][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : blue game highway
[2015-03-21 07:35:48,055][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'This is my personnel favorite board game store in Seattle.']
[2015-03-21 07:35:48,056][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : personnel favorit game board store seattl
[2015-03-21 07:35:48,060][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Blue Highway Games']
[2015-03-21 07:35:48,061][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : blue game highway
[2015-03-21 07:35:48,062][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'El Gaucho']
[2015-03-21 07:35:48,062][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : el gaucho
[2015-03-21 07:35:48,064][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Make sure you try the AMAZING BANANAS FOSTER.']
[2015-03-21 07:35:48,065][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tri sure make foster banana amaz
[2015-03-21 07:35:48,068][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'El Gaucho']
[2015-03-21 07:35:48,068][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : el gaucho
[2015-03-21 07:35:48,069][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Grand Hyatt Seattle']
[2015-03-21 07:35:48,070][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : hyatt seattl grand
[2015-03-21 07:35:48,073][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'You are about six blocks directly north of Pike Place Market.']
[2015-03-21 07:35:48,073][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pike north directli six place market block
[2015-03-21 07:35:48,078][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Grand Hyatt Seattle']
[2015-03-21 07:35:48,078][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : hyatt seattl grand
[2015-03-21 07:35:48,079][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Lick Pure Cream']
[2015-03-21 07:35:48,080][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : lick pure cream
[2015-03-21 07:35:48,082][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'But Michael will let you test try all his wonderful flavors.']
[2015-03-21 07:35:48,083][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tri michael let test flavor wonder
[2015-03-21 07:35:48,085][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Lick Pure Cream']
[2015-03-21 07:35:48,086][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : lick pure cream
[2015-03-21 07:35:48,086][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Saigon Deli']
[2015-03-21 07:35:48,087][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : deli saigon
[2015-03-21 07:35:48,089][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I love love love the Banh Mi Ga (chicken) and Banh Mi Heo (pork.']
[2015-03-21 07:35:48,090][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pork love mi ga chicken heo banh
[2015-03-21 07:35:48,095][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Saigon Deli']
[2015-03-21 07:35:48,096][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : deli saigon
[2015-03-21 07:35:48,097][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Moore Coffee Shop']
[2015-03-21 07:35:48,097][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : shop moor coffe
[2015-03-21 07:35:48,098][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Mexican Mocha was amazing too.']
[2015-03-21 07:35:48,099][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : amaz mexican mocha
[2015-03-21 07:35:48,100][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Moore Coffee Shop']
[2015-03-21 07:35:48,101][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : shop moor coffe
[2015-03-21 07:35:48,102][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Tacos Chukis']
[2015-03-21 07:35:48,103][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : chuki taco
[2015-03-21 07:35:48,105][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The carne asada and pollo are all solid winners.']
[2015-03-21 07:35:48,105][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : solid asada winner carn pollo
[2015-03-21 07:35:48,111][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Tacos Chukis']
[2015-03-21 07:35:48,112][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : chuki taco
[2015-03-21 07:35:48,112][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Petra Mediterranean Bistro']
[2015-03-21 07:35:48,113][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bistro mediterranean petra
[2015-03-21 07:35:48,116][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Hummus for appetizer - Excellent choice to start off the meal.']
[2015-03-21 07:35:48,116][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : choic hummu appet - excel start meal
[2015-03-21 07:35:48,120][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Petra Mediterranean Bistro']
[2015-03-21 07:35:48,121][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bistro mediterranean petra
[2015-03-21 07:35:48,122][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Serious Pie']
[2015-03-21 07:35:48,122][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : seriou pie
[2015-03-21 07:35:48,124][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'roasted chanterelle mushrooms, truffle cheese: DELICIOUS.']
[2015-03-21 07:35:48,125][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : mushroom chanterel , truffl chees roast delici :
[2015-03-21 07:35:48,129][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Serious Pie']
[2015-03-21 07:35:48,130][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : seriou pie
[2015-03-21 07:35:48,130][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Green Leaf Vietnamese Restaurant']
[2015-03-21 07:35:48,131][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : leaf green restaur vietnames
[2015-03-21 07:35:48,136][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Oh and dont forget to try the fresh spring rolls with shrimp.']
[2015-03-21 07:35:48,137][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tri forget oh spring shrimp fresh roll dont
[2015-03-21 07:35:48,143][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Green Leaf Vietnamese Restaurant']
[2015-03-21 07:35:48,144][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : leaf green restaur vietnames
[2015-03-21 07:35:48,144][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Calf and Kid']
[2015-03-21 07:35:48,145][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : calf kid
[2015-03-21 07:35:48,147][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'They were all delicious cheeses and made for a great picnic.']
[2015-03-21 07:35:48,148][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : delici chees picnic great made
[2015-03-21 07:35:48,149][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Calf and Kid']
[2015-03-21 07:35:48,150][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : calf kid
[2015-03-21 07:35:48,150][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Umi Sake House']
[2015-03-21 07:35:48,151][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : sake umi hous
[2015-03-21 07:35:48,154][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I highly recommend the Casanova Roll and the Bad boy roll.']
[2015-03-21 07:35:48,155][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : boy casanova bad recommend roll highli
[2015-03-21 07:35:48,159][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Umi Sake House']
[2015-03-21 07:35:48,160][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : sake umi hous
[2015-03-21 07:35:48,160][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Shorty's"]
[2015-03-21 07:35:48,161][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's shorti
[2015-03-21 07:35:48,164][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Shorty's is hands down the best pinball hall in the city."]
[2015-03-21 07:35:48,165][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's shorti citi pinbal hand hall best
[2015-03-21 07:35:48,167][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Shorty's"]
[2015-03-21 07:35:48,168][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's shorti
[2015-03-21 07:35:48,168][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Uli's Famous Sausage"]
[2015-03-21 07:35:48,169][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : famou uli 's sausag
[2015-03-21 07:35:48,171][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'But they have huge selection of great sausages at great price.']
[2015-03-21 07:35:48,172][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : price huge great sausag select
[2015-03-21 07:35:48,174][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Uli's Famous Sausage"]
[2015-03-21 07:35:48,174][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : famou uli 's sausag
[2015-03-21 07:35:48,175][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Frye Art Museum']
[2015-03-21 07:35:48,175][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : frye art museum
[2015-03-21 07:35:48,176][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Cool exhibits, Cool old school paintings, a variety of genre.']
[2015-03-21 07:35:48,177][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : exhibit school old genr , paint varieti cool
[2015-03-21 07:35:48,183][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Frye Art Museum']
[2015-03-21 07:35:48,184][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : frye art museum
[2015-03-21 07:35:48,185][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Fainting Goat Gelato']
[2015-03-21 07:35:48,185][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gelato faint goat
[2015-03-21 07:35:48,187][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Nutella and Salted Caramel are really great too.']
[2015-03-21 07:35:48,187][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : salt great caramel nutella realli
[2015-03-21 07:35:48,190][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Fainting Goat Gelato']
[2015-03-21 07:35:48,191][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gelato faint goat
[2015-03-21 07:35:48,191][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Rachel the Pig @ Pike Place Market']
[2015-03-21 07:35:48,193][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : @ pike rachel pig place market
[2015-03-21 07:35:48,196][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Rachel the Pig is easily the coolest piggy bank in the world.']
[2015-03-21 07:35:48,197][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : piggi rachel pig easili coolest world bank
[2015-03-21 07:35:48,201][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Rachel the Pig @ Pike Place Market']
[2015-03-21 07:35:48,202][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : @ pike rachel pig place market
[2015-03-21 07:35:48,202][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Altaye Ethiopian Restaurant']
[2015-03-21 07:35:48,203][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : altay ethiopian restaur
[2015-03-21 07:35:48,205][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The injera is made fresh every day, and it comes with your order.']
[2015-03-21 07:35:48,206][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : made everi , order injera fresh come day
[2015-03-21 07:35:48,209][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Altaye Ethiopian Restaurant']
[2015-03-21 07:35:48,210][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : altay ethiopian restaur
[2015-03-21 07:35:48,210][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Altura']
[2015-03-21 07:35:48,211][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : altura
[2015-03-21 07:35:48,212][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Love the fact that the tasting menu is SO flexible.']
[2015-03-21 07:35:48,213][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tast flexibl love fact menu
[2015-03-21 07:35:48,216][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Altura']
[2015-03-21 07:35:48,217][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : altura
[2015-03-21 07:35:48,217][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Aladdin Falafel Corner']
[2015-03-21 07:35:48,218][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : falafel corner aladdin
[2015-03-21 07:35:48,221][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Open late, awesome and friendly staff, and a great gyro.']
[2015-03-21 07:35:48,222][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : great gyro , friendli late open awesom staff
[2015-03-21 07:35:48,225][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Aladdin Falafel Corner']
[2015-03-21 07:35:48,226][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : falafel corner aladdin
[2015-03-21 07:35:48,227][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Columbia Center Observation Deck']
[2015-03-21 07:35:48,227][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : deck columbia center observ
[2015-03-21 07:35:48,232][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"I haven't been up the Space Needle, so can't compare."]
[2015-03-21 07:35:48,233][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : compar space ca , n't needl
[2015-03-21 07:35:48,234][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Columbia Center Observation Deck']
[2015-03-21 07:35:48,235][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : deck columbia center observ
[2015-03-21 07:35:48,235][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Street Bean Espresso']
[2015-03-21 07:35:48,236][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bean street espresso
[2015-03-21 07:35:48,238][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Consistently awesome drinks, great cause (and the latte art is always...']
[2015-03-21 07:35:48,239][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : latt great art consist drink , caus alway awesom
[2015-03-21 07:35:48,242][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Street Bean Espresso']
[2015-03-21 07:35:48,243][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bean street espresso
[2015-03-21 07:35:48,243][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Quinn's"]
[2015-03-21 07:35:48,244][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's quinn
[2015-03-21 07:35:48,245][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Who ever heard of "wild boar sloppy joe & crispy sage leaves.']
[2015-03-21 07:35:48,246][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : `` & sage crispi heard leav joe wild ever boar sloppi
[2015-03-21 07:35:48,256][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Quinn's"]
[2015-03-21 07:35:48,256][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : 's quinn
[2015-03-21 07:35:48,257][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Envy On Alki Skin Boutique']
[2015-03-21 07:35:48,258][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : envi skin boutiqu alki
[2015-03-21 07:35:48,262][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Nothing but great experiences so far!']
[2015-03-21 07:35:48,263][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : far ! great experi noth
[2015-03-21 07:35:48,266][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Envy On Alki Skin Boutique']
[2015-03-21 07:35:48,266][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : envi skin boutiqu alki
[2015-03-21 07:35:48,267][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Taylor Shellfish Farms']
[2015-03-21 07:35:48,267][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : farm taylor shellfish
[2015-03-21 07:35:48,271][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Some ponzu would have made the geoduck next level eating.']
[2015-03-21 07:35:48,272][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : made would level geoduck next ponzu eat
[2015-03-21 07:35:48,277][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Taylor Shellfish Farms']
[2015-03-21 07:35:48,277][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : farm taylor shellfish
[2015-03-21 07:35:48,278][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Pink Door']
[2015-03-21 07:35:48,279][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pink door
[2015-03-21 07:35:48,281][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The trapeze artist makes the evening just zany enough.']
[2015-03-21 07:35:48,282][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : even zani artist make enough trapez
[2015-03-21 07:35:48,287][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Pink Door']
[2015-03-21 07:35:48,288][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pink door
[2015-03-21 07:35:48,289][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Dahlia Bakery']
[2015-03-21 07:35:48,289][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : dahlia bakeri
[2015-03-21 07:35:48,291][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I love love love the coconut cream pie at Palace Kitchen.']
[2015-03-21 07:35:48,292][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : coconut love pie palac cream kitchen
[2015-03-21 07:35:48,295][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Dahlia Bakery']
[2015-03-21 07:35:48,296][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : dahlia bakeri
[2015-03-21 07:35:48,296][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Bavarian Meats']
[2015-03-21 07:35:48,297][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bavarian meat
[2015-03-21 07:35:48,298][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'This little gem has the best sausages in town.']
[2015-03-21 07:35:48,299][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : best town sausag gem littl
[2015-03-21 07:35:48,299][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Bavarian Meats']
[2015-03-21 07:35:48,300][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : bavarian meat
[2015-03-21 07:35:48,300][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Lola']
[2015-03-21 07:35:48,300][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : lola
[2015-03-21 07:35:48,302][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'She opened my eyes to amazing greek food and tom douglas.']
[2015-03-21 07:35:48,303][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : eye food greek tom dougla open amaz
[2015-03-21 07:35:48,307][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Lola']
[2015-03-21 07:35:48,308][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : lola
[2015-03-21 07:35:48,308][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Trophy Cupcakes and Party']
[2015-03-21 07:35:48,309][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : trophi cupcak parti
[2015-03-21 07:35:48,312][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Hands down the best cupcake I've tried in Seattle."]
[2015-03-21 07:35:48,312][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : tri cupcak 've seattl hand best
[2015-03-21 07:35:48,313][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Trophy Cupcakes and Party']
[2015-03-21 07:35:48,313][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : trophi cupcak parti
[2015-03-21 07:35:48,314][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Michou']
[2015-03-21 07:35:48,315][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : michou
[2015-03-21 07:35:48,317][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Sierra Chicken is perfection paired with the Quinoa salad.']
[2015-03-21 07:35:48,317][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : perfect salad quinoa pair sierra chicken
[2015-03-21 07:35:48,322][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Michou']
[2015-03-21 07:35:48,323][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : michou
[2015-03-21 07:35:48,323][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Chuck's Hop Shop"]
[2015-03-21 07:35:48,324][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : shop 's chuck hop
[2015-03-21 07:35:48,326][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'...the atmosphere is so unique: convenience store meets great craft beer...']
[2015-03-21 07:35:48,327][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : great : atmospher uniqu beer craft meet conveni store
[2015-03-21 07:35:48,330][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u"Chuck's Hop Shop"]
[2015-03-21 07:35:48,331][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : shop 's chuck hop
[2015-03-21 07:35:48,331][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Gelatiamo']
[2015-03-21 07:35:48,332][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gelatiamo
[2015-03-21 07:35:48,333][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'I also got a pistachio cream puff which was delicious and unique.']
[2015-03-21 07:35:48,334][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : pistachio uniqu also got puff delici cream
[2015-03-21 07:35:48,336][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Gelatiamo']
[2015-03-21 07:35:48,337][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : gelatiamo
[2015-03-21 07:35:48,338][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'La Buona Tavola']
[2015-03-21 07:35:48,338][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : buona tavola la
[2015-03-21 07:35:48,341][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Truffle oil, truffle salt, truffle spread, truffle galore.']
[2015-03-21 07:35:48,342][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : oil galor , truffl spread salt
[2015-03-21 07:35:48,347][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'La Buona Tavola']
[2015-03-21 07:35:48,348][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : buona tavola la
[2015-03-21 07:35:48,349][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Empire Espresso']
[2015-03-21 07:35:48,349][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : espresso empir
[2015-03-21 07:35:48,351][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Will definitely return to eat more ham waffles.']
[2015-03-21 07:35:48,352][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : return waffl definit eat ham
[2015-03-21 07:35:48,355][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Empire Espresso']
[2015-03-21 07:35:48,355][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : espresso empir
[2015-03-21 07:35:48,356][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Station']
[2015-03-21 07:35:48,356][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : station
[2015-03-21 07:35:48,358][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'Great location near the light rail too.']
[2015-03-21 07:35:48,359][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : light great locat near rail
[2015-03-21 07:35:48,362][4736 ][monk.turtle ][DEBUG   ][463 ][turtle.py] : [u'The Station']
[2015-03-21 07:35:48,362][4736 ][monk.turtle ][DEBUG   ][469 ][turtle.py] : station
[2015-03-21 08:17:19,842][4736 ][monk.crane  ][WARNING ][226 ][crane.py] : documents must have only string keys, key was True
[2015-03-21 08:17:19,844][4736 ][monk.crane  ][WARNING ][227 ][crane.py] : can not update document 550d8b7f80765912808edcb8 in fields {'activeBatchSize': 10, 'mutualExclusive': False, 'description': 'binary like or dislike classifier', 'creator': 'monk', 'monkType': 'PatternTigress', 'defaultCost': 1.0, 'confusionMatrix': {}, 'displayTextFields': [], 'curiosity': 0.0, 'total': 1e-08, 'name': 'likeTravel', 'patterns': {True: 'likeTravel'}, 'lastModified': datetime.datetime(2015, 3, 21, 8, 17, 19, 841781), 'defaulting': False, 'costs': {}, 'fields': ['likeTravel'], 'createdTime': datetime.datetime(2015, 3, 21, 8, 17, 19, 840138), 'displayImageField': None}
[2015-03-21 08:22:21,564][4736 ][monk.crane  ][WARNING ][226 ][crane.py] : documents must have only string keys, key was True
[2015-03-21 08:22:21,566][4736 ][monk.crane  ][WARNING ][227 ][crane.py] : can not update document 550d8b7f80765912808edcb8 in fields {'activeBatchSize': 10, 'mutualExclusive': False, 'description': 'binary like or dislike classifier', 'creator': 'monk', 'monkType': 'PatternTigress', 'defaultCost': 1.0, 'confusionMatrix': {}, 'displayTextFields': [], 'curiosity': 0.0, 'total': 1e-08, 'name': 'likeTravel', 'patterns': {True: 'likeTravel'}, 'lastModified': datetime.datetime(2015, 3, 21, 8, 22, 21, 564353), 'defaulting': False, 'costs': {}, 'fields': ['likeTravel'], 'createdTime': datetime.datetime(2015, 3, 21, 8, 17, 19, 840138), 'displayImageField': None}
[2015-03-21 08:23:00,587][4736 ][monk.crane  ][WARNING ][226 ][crane.py] : documents must have only string keys, key was True
[2015-03-21 08:23:00,589][4736 ][monk.crane  ][WARNING ][227 ][crane.py] : can not update document 550d8b7f80765912808edcb8 in fields {'activeBatchSize': 10, 'mutualExclusive': False, 'description': 'binary like or dislike classifier', 'creator': 'monk', 'monkType': 'PatternTigress', 'defaultCost': 1.0, 'confusionMatrix': {}, 'displayTextFields': [], 'curiosity': 0.0, 'total': 1e-08, 'name': 'likeTravel', 'patterns': {True: 'likeTravel'}, 'lastModified': datetime.datetime(2015, 3, 21, 8, 23, 0, 587541), 'defaulting': False, 'costs': {}, 'fields': ['likeTravel'], 'createdTime': datetime.datetime(2015, 3, 21, 8, 17, 19, 840138), 'displayImageField': None}
[2015-03-21 08:30:54,111][4736 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 08:31:58,703][4736 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 08:35:14,853][4736 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 08:36:29,395][4736 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 08:37:01,076][4736 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 08:38:47,743][4736 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 08:41:14,755][4736 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 08:42:28,603][4736 ][monk.mantis ][DEBUG   ][102 ][mantis.py] : gamma in mantis 1
[2015-03-21 08:42:28,615][4736 ][monk.mantis ][DEBUG   ][102 ][mantis.py] : gamma in mantis 1
[2015-03-21 08:49:13,241][5328 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 08:49:14,120][5328 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 08:49:14,121][5328 ][monk.api    ][INFO    ][40  ][api.py  ] : ------start up------
[2015-03-21 08:49:14,131][5328 ][monk.uid    ][INFO    ][32  ][uid.py  ] : initializing uid store
[2015-03-21 08:49:14,132][5328 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing Seattle 
[2015-03-21 08:49:14,133][5328 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing UserStore 
[2015-03-21 08:49:14,135][5328 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing EngineStore 
[2015-03-21 08:49:14,138][5328 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing PandaStore 
[2015-03-21 08:49:14,139][5328 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing MantisStore 
[2015-03-21 08:49:14,140][5328 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TurtleStore 
[2015-03-21 08:49:14,140][5328 ][monk.crane  ][INFO    ][61  ][crane.py] : initializing TigressStore 
[2015-03-21 08:53:17,226][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 08:53:49,526][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 08:54:18,879][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 08:54:35,149][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 08:56:11,996][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 08:56:33,971][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 09:01:20,946][5328 ][monk.mantis ][DEBUG   ][102 ][mantis.py] : gamma in mantis 1
[2015-03-21 09:01:20,949][5328 ][monk.svm_solver_dual][DEBUG   ][138 ][mantis.py] : rho0 in svm_solver_dual.trainModel 0.25
[2015-03-21 09:01:20,950][5328 ][monk.svm_solver_dual][DEBUG   ][138 ][mantis.py] : num_instances 2
[2015-03-21 09:01:20,950][5328 ][monk.mantis ][DEBUG   ][155 ][mantis.py] : q = * * 4097:-0.06896 4098:-0.06896 4099:-0.06896 4100:-0.06896 ...
[4101:-0.137930035591,4108:0.0]
[2015-03-21 09:01:20,951][5328 ][monk.mantis ][DEBUG   ][156 ][mantis.py] : w = * 4097:-0.1379 4098:-0.1379 4099:-0.1379 4100:-0.1379 ...
[4101:-0.275860071182,4108:0.0]
[2015-03-21 09:01:20,964][5328 ][monk.turtle ][DEBUG   ][230 ][turtle.py] : training clock 1
[2015-03-21 09:01:50,627][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 09:01:57,661][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 09:02:01,510][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 09:03:06,357][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField Y
[2015-03-21 09:03:44,708][5328 ][monk.tigress][DEBUG   ][109 ][tigress.py] : combinedField 
[2015-03-21 14:03:11,598][5328 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
[2015-03-21 14:03:18,301][5328 ][monk.roles.configuration][INFO    ][93  ][configuration.py] : configuration done
